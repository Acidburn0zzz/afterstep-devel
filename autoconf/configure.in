dnl# -*- sh -*-
dnl# Process this file with autoconf to produce a configure script.
dnl#
dnl#Copyright (c) 1998 Michal Vitecek <fuf@fuf.sh.cvut.cz>
dnl#Copyright (c) 1998 Sasha Vasko <sasha at aftercode.net>
dnl#Copyright (c) 1998 Juergen Sawinski <Juergen.Sawinski@urz.uni-heidelberg.de>
dnl#Copyright (c) 1997 1998 Guylhem AZNAR <guylhem@oeil.qc.ca>

AC_INIT(afterstep/autoexec.in)
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_HEADER(config.h:autoconf/config.h.in)

version="2.00.beta1"
app_version="2.00.beta1"
libafterstep_version="0.99"
libafterstep_version_major="0"
libafterstep_name="LIBAFTERSTEP"
libafterstep_file_name="libAfterStep"
libafterconf_version="0.99"
libafterconf_version_major="0"
libafterconf_name="LIBAFTERCONF"
libafterconf_file_name="libAfterConf"

dnl# Setup command-line options

dnl# we need the standard prefixes defined early
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="$prefix"
eval "bindir=$bindir"
eval "datadir=$datadir"
eval "mandir=$mandir"
eval "libdir=$libdir"
eval "includedir=$includedir"

dnl# directories
AC_ARG_WITH(gnustep_dir,	[  --with-gnustep-dir=DIR  GNUstep directory [[~/GNUstep]] ],with_gnustep_dir=$withval, with_gnustep_dir="~/GNUstep")
AC_ARG_WITH(gnustep_lib,	[  --with-gnustep-lib=DIR  GNUstep/Library directory [[Library]] ],with_gnustep_lib=$withval, with_gnustep_lib="Library")
AC_ARG_WITH(afterdir,		[  --with-afterdir=DIR     user AfterStep dir [[AfterStep]] ],with_afterdir=$withval, with_afterdir="AfterStep")

dnl# helper apps
AC_ARG_WITH(imageloader,	[  --with-imageloader=APP  used to display non-XPMs [[xli -onroot -quiet]] ],with_imageloader=$withval, with_imageloader="xli -onroot -quiet -colors 20")
AC_ARG_WITH(helpcommand,	[  --with-helpcommand=APP  display manpage for window [[xiterm -e man]] ],with_helpcommand=$withval, with_helpcommand="xiterm -e man")
AC_ARG_WITH(soundplayer,	[  --with-soundplayer=APP  used to play sounds from Audio [[play]] (from SOX package)],with_soundplayer=$withval, with_soundplayer="play")

dnl# look defaults
AC_ARG_WITH(startsort,		[  --with-startsort=METHOD start menu sorting method [[SORTBYALPHA]] ],with_startsort=$withval, with_startsort="SORTBYALPHA")
AC_ARG_ENABLE(different_looknfeels, [  --enable-different-looknfeels
                          different look&feel for each desktop [[no]] ],enable_different_looknfeels=$enableval,enable_different_looknfeels="no")
AC_ARG_WITH(desktops,		[  --with-desktops=DESKS   default desktops in pager [[4]] ],with_desktops=$withval, with_desktops="4")
AC_ARG_WITH(deskgeometry,	[  --with-deskgeometry=GEOM desktop views as COLUMNSxROWS [[2x2]] ],with_deskgeometry=$withval, with_deskgeometry="2x2")
with_desktops_1=`expr ${with_desktops} - 1`

dnl# The following is passed directly to libAfterImage configure :
AC_ARG_WITH(xpm,	    [  --with-xpm               support XPM image format [[yes]]])
AC_ARG_WITH(builtin_xpm,    [  --with-builtin-xpm       use builtin XPM parsing/handling instead of libXpm [[yes]]])
AC_ARG_WITH(xpm_includes,   [  --with-xpm-includes=DIR  use libXpm includes in DIR( when builtin XPM handling is disabled )], xpm_includes="$withval", xpm_includes=NO)
AC_ARG_WITH(jpeg,		    [  --with-jpeg              support JPEG image format [[yes]]])
AC_ARG_WITH(jpeg_includes,  [  --with-jpeg-includes=DIR use JPEG includes in DIR], jpeg_includes="$withval", jpeg_includes=NO)
AC_ARG_WITH(png,		    [  --with-png               support PNG image format [[yes]]])
AC_ARG_WITH(png_includes,   [  --with-png-includes=DIR  use PNG includes in DIR], png_includes="$withval", png_includes=NO)
AC_ARG_WITH(ungif,		    [  --with-ungif             support GIF image format using libungif [[yes]]])
AC_ARG_WITH(gif,		    [  --with-gif               support GIF image format using libgif   [[no]]])
AC_ARG_WITH(gif_includes,   [  --with-gif-includes=DIR  use GIF includes in DIR], gif_includes="$withval", gif_includes=NO)
AC_ARG_WITH(tiff,		    [  --with-tiff              support TIFF image format [[yes]]])
AC_ARG_WITH(tiff_includes,  [  --with-tiff-includes=DIR use TIFF includes in DIR], tiff_includes="$withval", tiff_includes=NO)

AC_ARG_WITH(tff,		    [  --with-ttf               support True Type Fonts via FreeType library [[yes]]])
AC_ARG_WITH(tff_includes,   [  --with-ttf-includes=DIR  use FreeType includes in DIR], ttf_includes="$withval", ttf_includes=NO)

AC_ARG_WITH(afterbase_includes,  [  --with-afterbase-includes=DIR  use libAfterBase includes in DIR], afterbase_includes="$withval", afterbase_includes=NO)
AC_ARG_WITH(afterimage_includes, [  --with-afterimage-includes=DIR  use libAfterImage includes in DIR], afterimage_includes="$withval", afterimage_includes=NO)
AC_ARG_WITH(afterbase_lib,       [  --with-afterbase-lib=DIR  use libAfterBase library located in DIR], afterbase_lib="$withval", afterbase_lib=NO)
AC_ARG_WITH(afterimage_lib,      [  --with-afterimage-lib=DIR  use libAfterImage library located in DIR], afterimage_lib="$withval", afterimage_lib=NO)

dnl# compile-time switches
AC_ARG_ENABLE(pagerbackground,	[  --enable-pagerbackground provide background support with the Pager [[yes]] ],enable_pagerbackground=$enableval,enable_pagerbackground="yes")
AC_ARG_ENABLE(i18n,		[  --enable-i18n           support I18N [[no]] ],enable_i18n=$enableval,enable_i18n="no")
AC_ARG_ENABLE(xlocale,		[  --enable-xlocale        using X_LOCALE [[no]] ],enable_xlocale=$enableval,enable_xlocale="no")
AC_ARG_ENABLE(menuwarp,		[  --enable-menuwarp       warp mouse pointer to menus [[no]] ],enable_menuwarp=$enableval,enable_menuwarp="no")
AC_ARG_ENABLE(savewindows,	[  --enable-savewindows    save windows and re-open next session [[yes]] ],enable_savewindows=$enableval,enable_savewindows="yes")
AC_ARG_ENABLE(texture,		[  --enable-texture        support gradient, XPM, and JPEG textures [[yes]] ],enable_texure=$enableval,enable_texture="yes")
AC_ARG_ENABLE(shade,		[  --enable-shade          support shaded windows [[yes]] ],enable_shade=$enableval,enable_shade="yes")
AC_ARG_ENABLE(virtual,		[  --enable-virtual        support virtual desktops [[yes]] ],enable_virtual=$enableval,enable_virtual="yes")
AC_ARG_ENABLE(saveunders,	[  --enable-saveunders     request saveunders for menus [[yes]] ],enable_saveunders=$enableval,enable_saveunders="yes")
AC_ARG_ENABLE(windowlist,	[  --enable-windowlist     compile built-in window-list [[yes]] ],enable_windowlist=$enableval,enable_windowlist="yes")
AC_ARG_ENABLE(availability,	[  --enable-availability   check for unavailable binaries [[yes]] ],enable_availability=$enableval,enable_availability="yes")
AC_ARG_ENABLE(fixeditems,	[  --enable-fixeditems     enable fixed menu entries [[no]] ], enable_fixeditems=$enableval,enable_fixeditems="no")
AC_ARG_ENABLE(ascp,     	[  --enable-ascp           build AfterStep Control Panel [[yes]] ], enable_ascp=$enableval,enable_ascp="yes")

AC_ARG_WITH(locale,		[  --with-locale=LOCALE    locale name you want to use ],with_locale=$withval,with_locale="")
AC_ARG_ENABLE(shaping,		[  --enable-shaping        support shaped windows [[yes]] ],enable_shaping=$enableval,enable_shaping="yes")
AC_ARG_ENABLE(shmimage,		[  --enable-shmimage       support shared memory images [[yes]] ],enable_shmimage=$enableval,enable_shmimage="yes")
AC_ARG_ENABLE(xinerama,		[  --enable-xinerama       support Xinerama Multihead extentions [[yes]] ],enable_xinerama=$enableval,enable_xinerama="yes")
AC_ARG_ENABLE(staticlibs,       [  --enable-staticlibs     enable linking to libafterstep statically [[yes]] ],enable_staticlibs=$enableval,enable_staticlibs="yes")

AC_ARG_WITH(libefence,		[  --with-libefence        compile with libefence to debug buffer overruns [[no]] ],with_libefence=$withval,with_libefence="")
AC_ARG_ENABLE(gdb,		[  --enable-gdb            add gdb symbols (-g) (for debugging) [[no]] ],enable_gdb=$enableval,enable_gdb="no")
AC_ARG_ENABLE(sigsegv,		[  --enable-sigsegv        enable internal handler of Segmentation Fault (for self-diagnostics) [[yes]] ],enable_sigsegv=$enableval,enable_sigsegv="yes")
AC_ARG_ENABLE(warn,		[  --enable-warn           turn on more compiler warnings (for debugging) [[no]] ],enable_warn=$enableval,enable_warn="no")
AC_ARG_ENABLE(gprof,		[  --enable-gprof          add gprof symbols (-pg) (for debugging) [[no]] ],enable_gprof=$enableval,enable_gprof="no")
AC_ARG_ENABLE(audit,		[  --enable-audit          memory usage audit (for debugging) [[no]] ],enable_audit=$enableval,enable_audit="no")
AC_ARG_ENABLE(trace,		[  --enable-trace          some function calls tracing (see include/trace.h) (for debugging) [[no]] ],enable_trace=$enableval,enable_trace="no")
AC_ARG_ENABLE(trace-x,		[  --enable-trace-x        trace X calls (runtime option) (for debugging) [[no]] ],enable_trace_x=$enableval,enable_trace_x="no")
AC_ARG_ENABLE(mmx_optimization,
							[  --enable-mmx-optimization  enable utilization of MMX instruction set to speed up imaging operations [[yes]] ],enable_mmx_optimization=$enableval,enable_mmx_optimization="yes")


AC_ARG_ENABLE(script,		[  --enable-script         compile Script module [[yes]] ], enable_script=$enableval,enable_script="yes")
AC_ARG_ENABLE(reuse-font,	[  --enable-reuse-font     enables reuse of loaded font resource by modules (don't use with TrueType fonts !)[[no]] ],[if test x$enableval == "xyes"; then AC_DEFINE(MODULE_REUSE_LOADED_FONT) fi],enable_script="yes")

dnl# Comman stuff : compiler tools, proggies, etc.

AC_PROG_CC
AC_PROG_CXX

export CC
export GCC
export prefix
export exec_prefix

dnl# now we need to play abot with CFLAGS :

dnl# Remove -g
if test -n "`echo $CFLAGS' ' | grep '\-g ' 2> /dev/null`" ; then
  CFLAGS=`echo "$CFLAGS " | sed "s/-g / /"`
fi

dnl# Add -Wall
if test "x$GCC" = "xyes"; then
  if test -z "`echo $CFLAGS | grep '\-Wall' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

dnl# Add -fPIC for IA64 compilation
AC_CYGWIN
if test "x$CYGWIN" = "x" -a "x$GCC" = "xyes" ; then
  if test -z "`echo $CFLAGS | grep '\-fPIC' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -fPIC"
  fi
fi

dnl# Add -g
if test "x$enable_gdb" = "xyes"; then
  CFLAGS="$CFLAGS -g"
  LDFLAGS="$LDFLAGS -g"
else
  CFLAGS="$CFLAGS -DNO_DEBUG_OUTPUT"
fi

dnl# Add -pg
if test "x$enable_gprof" = "xyes"; then
  CFLAGS="$CFLAGS -pg"
  LDFLAGS="$LDFLAGS -pg"
fi

dnl# Add lots more warnings
if test "x$enable_warn" = "xyes"; then
  CFLAGS="$CFLAGS -Wuninitialized -Wwrite-strings -Wcast-qual -Wbad-function-cast -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wconversion -Wcomment -Wcast-align -Winline -Wshadow -Wredundant-decls -Wid-clash-31"
fi

if test "x$GCC" = "xyes"; then
   LDFLAGS="$LDFLAGS -rdynamic"
fi

dnl# done with flags - lets export those for our children to use :
export CFLAGS
export LDFLAGS

dnl# install checks :
AC_PROG_INSTALL
dnl# if the path to the install program is relative, make it absolute
currdir=`pwd`
INSTALL=`echo $INSTALL|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
INSTALL_PROGRAM=`echo $INSTALL_PROGRAM|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
INSTALL_DATA=`echo $INSTALL_DATA|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
INSTALL_LIB=`echo $INSTALL_LIB|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`

export INSTALL
export INSTALL_PROGRAM
export INSTALL_DATA
export INSTALL_LIB

AC_PROG_RANLIB
export RANLIB

AC_PATH_PROG(RM, rm, rm)
export RM
AC_PATH_PROG(MV, mv, mv)
export MV
AC_PATH_PROG(CP, cp, cp)
export CP
AC_PATH_PROG(MKDIR, mkdir, mkdir)
export MKDIR
AC_PATH_PROG(PERL, perl, perl)
export PERL
AC_PATH_PROG(FIND, find, find)
export FIND
AC_PATH_PROG(XARGS, xargs, xargs)
export XARGS
AC_PATH_PROG(LDCONFIG, ldconfig, ldconfig, $PATH:/sbin:/usr/local/sbin)
export LDCONFIG

dnl# Checks for optional programs
AC_PROG_LEX
export LEX
export LEXLIB
AC_PROG_YACC
export YACC
AC_CHECK_PROG(sgmltools, sgmltools, HAVE_SGMLTOOLS, NO_SGMLTOOLS)
export sgmltools

dnl# check for wait is particularly nasty :
AC_FUNC_WAIT3
if test "x$ac_cv_func_wait3_rusage" = "xyes"; then
	DO_HAVE_WAIT3=yes
	export DO_HAVE_WAIT3
fi

dnl# Check for X :
AC_PATH_XTRA
x_libs="$LDFLAGS $X_LIBS $X_EXTRA_LIBS $X_PRE_LIBS"
AC_CHECK_LIB(X11, XOpenDisplay, [x_libs="-lX11 $x_libs"],,$x_libs)

have_shmimage=no
if test "x$enable_shmimage" = "xyes"; then
	AC_CHECK_LIB(Xext, XShmCreateImage, [have_shmimage=yes],,$x_libs)
	if test "x$have_shmimage" = "xyes"; then
		AC_CHECK_HEADER(sys/ipc.h,,[have_shmimage=no])
	fi
	if test "x$have_shmimage" = "xyes"; then
		AC_CHECK_HEADER(sys/shm.h,,[have_shmimage=no])
	fi
	if test "x$have_shmimage" = "xyes"; then
		add_lib_xext=yes
		AC_DEFINE(XSHMIMAGE)
	fi
fi


PATH_XTRA_CHECKED=yes
export PATH_XTRA_CHECKED
export x_includes
export x_libraries
AC_SUBST(x_libraries)
export X_CFLAGS
export X_LIBS
export X_EXTRA_LIBS
export X_PRE_LIBS
export CPP
export have_x
export have_shmimage

dnl# DONE WITH COMMON STUFF
dnl# #############################################################
dnl# first configuringlibraries :

FROM_AFTERSTEP_CONFIGURE=yes
export FROM_AFTERSTEP_CONFIGURE

_def_lib_conf_opts=" \
	--prefix=${prefix} \
	--exec-prefix=${exec_prefix} \
	--bindir=${bindir} \
	--sbindir=${sbindir} \
	--libexecdir=${libexecdir} \
	--datadir=${datadir} \
	--sysconfdir=${sysconfdir} \
	--sharedstatedir=${sharedstatedir} \
	--localstatedir=${localstatedir} \
	--libdir=${libdir} \
	--includedir=${includedir} \
	--oldincludedir=${oldincludedir} \
	--infodir=${infodir} \
	--mandir=${mandir} \
	--with-x-includes=${x_includes} \
	--with-x=${with_x} \
	--enable-audit=${enable_audit} \
	--enable-trace=${enable_trace} \
	--enable-shmimage=${enable_shmimage} \
"

if test -d libAfterBase; then
  AC_CHECKING(libAfterBase)
  cd libAfterBase; \
  ./configure $_def_lib_conf_opts \
   --enable-trace-x=$enable_trace_x; \
  cd ../
  afterbase_includes=".. -I../.."
  afterbase_lib=
fi

if test -d libAfterBase; then
  AC_CHECKING(libAfterImage)
  cd libAfterImage; \
  ./configure $_def_lib_conf_opts \
   --with-xpm=$with_xpm   --with-builtin-xpm=$with_builtin_xpm  --with-xpm-includes=$xpm_includes \
   --with-jpeg=$with_jpeg --with-jpeg-includes=$jpeg_includes \
   --with-png=$with_png   --with-png-includes=$png_includes \
   --with-gif-includes=$gif_includes \
   --with-tiff=$with_tiff --with-tiff-includes=$tiff_includes \
   --with-ttf=$with_ttf   --with-ttf-includes=$ttf_includes \
   --enable-mmx-optimization=$enable_mmx_optimization \
   --with-ungif=$with_ungif --with-gif=$with_gif; \
   cd ../
  afterimage_includes=".. -I../.."
  afterimage_lib=
fi

dnl# Commented out by Sasha as we will build path ourselves in as v > 1.9
dnl# Construct Gnu/AfterStep path from pieces
dnl# with_gnustep_lib=${with_gnustep_dir}/${with_gnustep_lib}
dnl# with_afterdir=${with_gnustep_lib}/${with_afterdir}


dnl# let's check for endiannes of our box
AC_C_BIGENDIAN
AC_C_INLINE

dnl# Check for headers
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_HEADERS(sys/wait.h sys/time.h)

dnl# Check for librplay for Audio

AUDIO_LIBS=
AUDIO_PLAY_CMD=builtin-cat
dnl# AC_CHECK_LIB(rplay,rplay,[AC_CHECK_HEADER(rplay.h,AC_DEFINE(HAVE_RPLAY))])
AC_CHECK_LIB(rplay,rplay,[AC_CHECK_HEADERS(rplay.h,[AUDIO_LIBS=-lrplay; AUDIO_PLAY_CMD=builtin-rplay])])

AC_SUBST(AUDIO_LIBS)
AC_SUBST(AUDIO_PLAY_CMD)

dnl# Check for X shaped window extension
HAVESHAPE="NOSHAPE"
add_lib_xext=no
if test "x$enable_shaping" = "xyes"; then
  	AC_CHECK_LIB(Xext, XShapeCombineMask, [add_lib_xext=yes;AC_DEFINE(SHAPE,)],,$x_libs)
fi

if test "x$add_lib_xext" = "xyes"; then
	x_libs="$x_libs -lXext"
fi

dnl# Check for Xinerama extension

HAVEXINE="NOXINE"
if test "x$enable_xinerama" = "xyes"; then
  AC_CHECK_LIB(Xinerama, XineramaQueryScreens, [x_libs="-lXinerama $x_libs";AC_DEFINE(HAVE_XINERAMA,)],,$x_libs)
fi

dnl# disable internal sigsegv handler if requested :
if test "x$enable_sigsegv" = "xyes"; then
  AC_DEFINE(HAVE_SIGSEGV_HANDLING,)
fi

dnl# if needed - check for external libAfterImage and libAfterBase :
AC_MSG_CHECKING(libAfterBase headers)
if test "$afterbase_includes" = "NO"; then
  AC_CHECK_HEADER(libAfterBase/astypes.h,
			      [AC_DEFINE(HAVE_AFTERBASE) AC_MSG_RESULT(<libAfterBase/astypes.h>)],
				   AC_MSG_RESULT(none found))
else
  AC_DEFINE(HAVE_AFTERBASE)
  if test "x$afterbase_includes" != "x"; then
	  LIBAFTERBASE_CFLAGS="-I$afterbase_includes"
  fi
  AC_MSG_RESULT($afterbase_includes)
fi

AC_MSG_CHECKING(libAfterImage headers)
if test "$afterimage_includes" = "NO"; then
  AC_CHECK_HEADER(libAfterImage/afterimage.h,
			      [AC_DEFINE(HAVE_AFTERIMAGE) AC_MSG_RESULT(<libAfterImage/afterimage.h>)],
				   AC_MSG_RESULT(none found))
else
  AC_DEFINE(HAVE_AFTERIMAGE)
  if test "x$afterimage_includes" != "x"; then
	  LIBAFTERIMAGE_CFLAGS="-I$afterimage_includes"
  fi
  AC_MSG_RESULT($afterimage_includes)
fi

if test "x$enable_staticlibs" = "xyes"; then
   AFTERBASE_LIB="../../libAfterBase/libAfterBase.a"
   AFTERIMAGE_LIB="../../libAfterImage/libAfterImage.a"
   AFTERSTEP_LIB="../../libAfterStep/libAfterStep.a"
   AFTERCONF_LIB="../../libAfterConf/libAfterConf.a"
   WIDGETS_LIB="../Script/Widgets/libWidgets.a"
   LIBPROG='$(LIB_STATIC)'
   LIBINSTALL="install.static"
else
   AFTERBASE_LIB="../../libAfterBase/libAfterBase.so"
   AFTERIMAGE_LIB="../../libAfterImage/libAfterImage.so"
   AFTERSTEP_LIB="../../libAfterStep/libAfterStep.so"
   AFTERCONF_LIB="../../libAfterConf/libAfterConf.so"
   WIDGETS_LIB="../Script/Widgets/libWidgets.so"
   LIBPROG='$(LIB_SHARED)'
   LIBINSTALL="install.dyn"
fi

AC_MSG_CHECKING(libAfterBase library)
AFTERBASE_LIBS=
if test "$afterbase_lib" = NO; then
  AFTERBASE_LIB=-lAfterBase
else
  if test "x$afterbase_lib" != "x"; then
	 AFTERBASE_LIB="-L$afterbase_lib -lAfterBase"
  fi
fi
AC_MSG_RESULT($AFTERBASE_LIBS)


AC_MSG_CHECKING(libAfterImage external libraries)
AFTERIMAGE_LIBS=
if test "$afterimage_lib" = NO; then
  AFTERIMAGE_LIB=-lAfterImage
  AFTERIMAGE_LIBS=`afterimage-libs --external-only`
  image_format=`afterimage-libs --preferred-image-format`
else
  if test -x "libAfterImage/afterimage-libs"; then
     AFTERIMAGE_LIBS=`libAfterImage/afterimage-libs --external-only`
     image_format=`libAfterImage/afterimage-libs --preferred-image-format`
  else
	 AFTERIMAGE_LIB="-L$afterimage_lib -lAfterImage"
	 AFTERIMAGE_LIBS=`$afterimage_lib/afterimage-libs --external-only`
         image_format=`$afterimage_lib/afterimage-libs --preferred-image-format`
  fi
fi
AC_MSG_RESULT($AFTERIMAGE_LIBS)
AC_MSG_CHECKING(preferred image format)
AC_MSG_RESULT($image_format)

if test "x$LIBAFTERIMAGE_CFLAGS" = "x$LIBAFTERBASE_CFLAGS"; then
  LIBAFTERIMAGE_CFLAGS=
fi
AC_SUBST(LIBAFTERBASE_CFLAGS)
AC_SUBST(LIBAFTERIMAGE_CFLAGS)

dnl# if ascp requested - check for fltk libraries

LIBS=$saved_LIBS

ASCP_LIBS=
ASCP_INCLUDES=
ASCP=

if test "x$enable_ascp" = "xyes"; then
    AC_MSG_CHECKING(libraries required by ascp)
    if fltk-config --libs >/dev/null  ;then
	ASCP=ascp ;
	present_libs="$LDFLAGS $LIBS $x_libs $AFTERIMAGE_LIBS";
	for l in `fltk-config --ldstaticflags`; do
	    lib_found=no
	    for p in `echo "$present_libs"` ; do
		if test "x$l" = "x$p" ; then
    		    lib_found=yes;
		fi;
	    done;
	    if test "x$lib_found" != "xyes" ; then
			ASCP_LIBS="$ASCP_LIBS $l" ;
	    fi;
	done;
	AC_MSG_RESULT($ASCP_LIBS)
    else
	enable_ascp=no ;
	AC_MSG_RESULT(none found, ascp disabled)
	echo "You have to install FLTK libaries in order to be able to compile ascp."
    fi;
fi;

if test "x$enable_ascp" = "xyes"; then
    AC_MSG_CHECKING(headers required by ascp)
    if fltk-config --cflags >/dev/null  ;then
	ASCP=ascp ;
	present_incs="$CCFLAGS $x_includes";
	for l in `fltk-config --cflags` ;	do
	    inc_found=no
	    for p in `echo "$present_incs"` ; do
		if test "x$l" = "x$p" ; then
    		    inc_found=yes;
		fi;
		if test "x$l" = "x-I$p" ; then
    		    inc_found=yes;
		fi;
	    done;
	    if test "x$inc_found" != "xyes" ; then
		ASCP_INCLUDES="$ASCP_INCLUDES $l" ;
	    fi;
	done;
	AC_MSG_RESULT($ASCP_INCLUDES)
    else
	enable_ascp=no ;
	AC_MSG_RESULT(none found, ascp disabled)
	echo "You have to install FLTK library in order to be able to compile ascp."
    fi;
fi;

dnl# Electric Fence goes at the end
if test "x$with_libefence" = "xyes"; then
  AC_CHECK_LIB(efence,malloc,x_libs="$x_libs -lefence")
fi

dnl# define X_LOCALE.  need Linux, NetBSD and etc.
if test "x$enable_xlocale" = "xyes"; then
  DEFINE_XLOCALE="-DX_LOCALE"
fi

dnl# Translate enable_* from "yes/no" to "1/0" (for configure.h)

if test "x$enable_different_looknfeels" = "xyes"; then AC_DEFINE(DIFFERENTLOOKNFEELFOREACHDESKTOP,) fi
if test "x$enable_pagerbackground" = "xyes"; then AC_DEFINE(PAGER_BACKGROUND) fi
if test "x$enable_i18n" = "xyes"; then AC_DEFINE(I18N) fi
if test "x$enable_menuwarp" = "xno"; then AC_DEFINE(NO_WARPPOINTERTOMENU) fi
if test "x$enable_savewindows" = "xno"; then AC_DEFINE(NO_SAVEWINDOWS) fi
if test "x$enable_texture" = "xno"; then AC_DEFINE(NO_TEXTURE) fi
if test "x$enable_shade" = "xno"; then AC_DEFINE(NO_SHADE) fi
if test "x$enable_virtual" = "xno"; then AC_DEFINE(NO_VIRTUAL) fi
if test "x$enable_saveunders" = "xno"; then AC_DEFINE(NO_SAVEUNDERS) fi
if test "x$enable_windowlist" = "xno"; then AC_DEFINE(NO_WINDOWLIST) fi
if test "x$enable_availability" = "xno"; then AC_DEFINE(NO_AVAILABILITYCHECK) fi
if test "x$enable_fixeditems" = "xyes"; then AC_DEFINE(FIXED_DIR, "fixed") fi
if test "x$enable_audit" = "xyes"; then AC_DEFINE(DEBUG_ALLOCS) fi
if test "x$enable_trace" = "xyes"; then AC_DEFINE(DEBUG_TRACE) fi
if test "x$enable_trace_x" = "xyes"; then AC_DEFINE(DEBUG_TRACE_X) fi
if test "x$enable_script" = "xyes"; then enable_script="1"; else enable_script="0"; fi

dnl# Variable strings declaration

dnl# don't process Script and its subdirs if it wasn't asked
SCRIPT_DIR=""
if test "x$enable_script" = "x1"; then
    SCRIPT_DIR="src/Script/Widgets src/Script"
fi

AC_SUBST(version)
AC_SUBST(app_version)
AC_SUBST(libafterstep_version)
AC_SUBST(libafterstep_version_major)
AC_SUBST(libafterstep_name)
AC_SUBST(libafterstep_file_name)
AC_SUBST(libafterwidget_version)
AC_SUBST(libafterwidget_version_major)
AC_SUBST(libafterwidget_name)
AC_SUBST(libafterwidget_file_name)
AC_SUBST(libafterconf_version)
AC_SUBST(libafterconf_version_major)
AC_SUBST(libafterconf_name)
AC_SUBST(libafterconf_file_name)
AC_SUBST(with_locale)
AC_SUBST(image_format)
AC_SUBST(ASCP)
AC_SUBST(ASCP_LIBS)
AC_SUBST(ASCP_INCLUDES)
AC_SUBST(x_libs)
AC_SUBST(x_includes)
AC_SUBST(XEXT_LIB)
AC_SUBST(AFTERBASE_LIB)
AC_SUBST(AFTERIMAGE_LIB)
AC_SUBST(AFTERIMAGE_LIBS)
AC_SUBST(AFTERSTEP_LIB)
AC_SUBST(AFTERCONF_LIB)
AC_SUBST(WIDGETS_LIB)
AC_SUBST(LIBPROG)
AC_SUBST(LIBINSTALL)
AC_SUBST(DEFINE_XLOCALE)
AC_SUBST(sgmltools)
AC_SUBST(with_gnustep_dir)
AC_SUBST(with_gnustep_lib)
AC_SUBST(with_afterdir)
AC_SUBST(with_imageloader)
AC_SUBST(with_soundplayer)
AC_SUBST(with_helpcommand)
AC_SUBST(with_startsort)
AC_SUBST(with_desktops)
AC_SUBST(with_desktops_1)
AC_SUBST(with_deskgeometry)
dnl# old stuff :
AC_SUBST(enable_different_looknfeels)
AC_SUBST(enable_pagerbackground)
AC_SUBST(enable_i18n)
AC_SUBST(enable_menuwarp)
AC_SUBST(enable_savewindows)
AC_SUBST(enable_texture)
AC_SUBST(enable_shade)
AC_SUBST(enable_virtual)
AC_SUBST(enable_saveunders)
AC_SUBST(enable_windowlist)
AC_SUBST(enable_availability)
AC_SUBST(enable_fixeditems)

AC_SUBST(SCRIPT_DIR)
AC_SUBST(PERL)

dnl# Write results

dnl# AC_CONFIG_HEADER(include/config.h)

dnl# Common parts of the Makefile
MAKEFILEDEFINES=./autoconf/Makefile.defines
MAKEFILECOMMON=./autoconf/Makefile.common
MAKEFILECOMMONLIB=./autoconf/Makefile.common.lib
LIBAFTERBASEFILES=./libAfterBase/.shared
LIBAFTERIMAGEFILES=./libAfterImage/.shared
LIBAFTERSTEPFILES=./libAfterStep/.shared
LIBAFTERCONFFILES=./libAfterConf/.shared

AC_SUBST_FILE(LIBAFTERBASEFILES)
AC_SUBST_FILE(LIBAFTERIMAGEFILES)
AC_SUBST_FILE(LIBAFTERSTEPFILES)
AC_SUBST_FILE(LIBAFTERCONFFILES)

AC_SUBST_FILE(MAKEFILEDEFINES)
AC_SUBST_FILE(MAKEFILECOMMON)
AC_SUBST_FILE(MAKEFILECOMMONLIB)

AC_OUTPUT(\
autoconf/Makefile.defines \
autoconf/Makefile.common \
autoconf/Makefile.common.lib \
configure.h \
Makefile \
\
afterstep/Makefile \
\
doc/Makefile \
doc/afterstepdoc \
\
libAfterStep/Makefile \
libAfterConf/Makefile \
\
src/afterstep/Makefile \
src/ascp/Makefile \
src/asetroot/Makefile \
src/Animate/Makefile \
src/Audio/Makefile \
src/Banner/Makefile \
src/Cascade/Makefile \
src/Clean/Makefile \
src/Form/Makefile \
src/Gnome/Makefile \
src/Ident/Makefile \
src/Pager/Makefile \
src/Save/Makefile \
src/Script/Widgets/Makefile \
src/Script/Makefile \
src/Scroll/Makefile \
src/Sound/Makefile \
src/Tile/Makefile \
src/Wharf/Makefile \
src/WinList2/Makefile \
src/test/Makefile \
\
tools/Makefile \
tools/installastheme.pl \
tools/makeastheme.pl \
\
afterstep/base \
afterstep/audio \
afterstep/autoexec \
afterstep/pager \
afterstep/start/.include \
afterstep/start/1_Desktop/Feel/.include \
afterstep/start/1_Desktop/Color_Scheme/.include \
afterstep/start/1_Desktop/Look/.include \
afterstep/start/1_Desktop/Theme/.include \
afterstep/start/1_Desktop/Pictures/.include \
)

echo "


AfterStep $version is now hopefully configured:
Just run : make ; make install
"
