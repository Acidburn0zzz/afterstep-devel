version 1.99.0 AKA 2.0 beta1
1. General
        AfterStep had been almost entirely rewritten in this new incarnation.
        Here is the short list of new architectural changes:
        1.1. New high performance and high quality image handling engine has
             been developed to fulfill GUI needs. It includes different image
             transformations, such as scaling, tiling, cropping, blurring,
             blending of arbitrary number of layers, in-memory image compression,
             support for 12 different file formats, including its own parser/writer
             of XPM files, capable of achieving much better performance then
             default libXpm. Supported image formats are :
             XPM, PNG, JPEG, XCF(GIMP image format), PPM, PNM, BMP, ICO,
             CUR, GIF, TIFF, and XML scripts. Where XML scripts allow for user to
             create script of transformations to be performed on the image at the
             time when it gets loaded.
             libAfterImage also provides support for TTF fonts ( using libfreetype )
             and smoothed standard X raster fonts.
        1.2. Window hints handling has been rewriten and reorganized, and most of the
             Extended WM specs has been incorporated, as well, as better support for
             Motif, ICCCM and old GNOME hints has been implemented.
        1.3. All the GUI rendering code has been aggregated into libAfterStep
             and now all the GUI elements are rendered using consistent approach
             in every module and every part of the AfterStep proper. From now on
             interface is build from so called TBars. TBar is rectangular area
             that may be focused(hilited) or unfocused and pressed or unpressed.
             Each TBar has the following structure :
                - the background of the TBar, which is defined by MyStyle and state
                  of the bar - there are two MyStyles assigned to each TBar - one
                  for focused and one for unfocused state.
                - tiles of the TBar. Tiles are smaller features that gets arranged
                  inside the bar according to its size, alignment, position and
                  order. Tiles could be static icons ( cannot be pressed );
                  blocks of buttons - each having two shapes - pressed and normal;
                  Text labels; Empty space tiles.
                  There could be upto 256 tiles, each residing on one of the cells
                  in 16x16 grid. Several tiles could reside in single cell, in
                  which case they get superimposed on top of each other.
                - bevel of the TBar. When TBar is rendered all of its tiles are
                  superimposed on top of its background, and resulting image
                  will have a 3D bevel drawn on it, using colors from same
                  MyStyle as used for background. Bevel could be switched off
                  partially or entirely. Respective configuration options has
                  been added  where appropriate. When TBar is pressed - its
                  bevel is inverted.

             When TBar is rendered all of its elements gets superimposed on top
             of each other using one of 13 blending methods supported by
             libAfterImage, with default being simple alphablending. See
             MyFrame configuration for more details. This is refrred to as
             "Composition Method".
        1.4. Due to the fact that AfterSTep is using compression to store
             images in memory - there is no need to have separate root
             background handler, and so asetroot has been discontinued and
             afterstep proper now does all the root background loading.
             You could simply copy-and-paste your asteroot config into your
             look file. This has an added advantage of simplifing theme supprt
             for root backgrounds.
        1.5. Sugnificant work has been done to create libAfterConf which
             provides easy means for reading configuration options, and
             facilitates implementation of any configuration tool.
        1.6. Some work has been done to improve support for themes. AfterStep
             proper and modules now load configuration files is this order :
             1 - base config
             2 - look, feel, menu, database, autoexec and module specific config
             3 - theme file
             4 - theme override file
             theme override file is needed so that user may have a list of
             critical options that he/she does not want to be changed by any
             theme.
             What is missing here is comprehensive theme building tool.
        1.7. AfterStep now make extensive use of X shaped extensions ( where
             available ) Everything could be shaped now - titlebars, Pager,
             Wharf, etc. To make some element shaped - MyStyle with BackPixmap
             type 125 or 126 should be used.
        1.8. Menus are now treated same as regular windows. They could be
             configured in database file using p[reset Style "ASMenu" to have
             different titlebar buttons, frame decorations, stickiness, etc.
             MenuPinOn has been changed to be just another titlebar button,
             with PinMenu function assigned to it.
        1.9. AfterStep no longer uses fixed scheme of 5  titlebar buttons on
             each side, and order of buttons could be configured in look. There
             is still limitation to have no more then 10 buttons total.

2. Look options
        2.1. Overview
                Frame decoration seting has been greately enhanced. It is now
             fashioned after MyStyle option and is called MyFrmae. It allows
             for several named structures, with inheritance and ability to
             assign different structure to different apps using the database.
                As mentioned above root background settings has been moved into
             look - hence MyBackground and Desk back as look options.
                MyStyle has far greater number of BackPixmap types reflecting
             new functionality in libAfterImage.
                CompositionMethod setting has been added to different aspects
             of look.
                New options for more flexible placing of titlebar buttons has
             been added.
                Balloons now support both X and Y offset as well as MyStyle
             instead of simple back and fore colors.

        2.2. Window frame decorations (aka MyFrame )
                MyFrame contains complete instructions as to how window should
                be decorated :

                MyFrame "name"
                      [Inherit     "name"]
                   #traditional form :
                      [North       <pixmap>]
                      [East        <pixmap>]
                      [South       <pixmap>]
                      [West        <pixmap>]
                      [NorthEast   <pixmap>]
                      [NorthWest   <pixmap>]
                      [SouthEast   <pixmap>]
                      [SouthWest   <pixmap>]
                  #alternative form :
                      [Side        North|South|East|West|Any [<pixmap>]] - if pixmap is ommited -
                                                                           empty bevel will be drawn
                      [NoSide      North|South|East|West|Any]
                      [Corner      NorthEast|SouthEast|NorthWest|SouthWest|Any <pixmap>] - if pixmap is ommited -
                                                                                           empty bevel will be drawn
                      [NoCorner    NorthEast|SouthEast|NorthWest|SouthWest|Any]
                  #new settings :
                      [TitleUnfocusedStyle   <style>
                      [TitleFocusedStyle     <style>
                      [TitleStickyStyle      <style>
                      [FrameUnfocusedStyle   <style>
                      [FrameFocusedStyle     <style>
                      [FrameStickyStyle      <style>
                      [TitleBackground       <pixmap>] - gets overlayed over background and under the text
                  #additional attributes :
                      [SideSize        North|South|East|West|Any <WIDTHxLENGTH>] - pixmap will be scaled to this size
                      [SideAlign       North|South|East|West|Any Left,Top,Right,Bottom,HTiled,VTiled,HScaled,VScaled]
                      [SideBevel       North|South|East|West|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [SideFocusedBevel      North|South|East|West|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [SideUnfocusedBevel    North|South|East|West|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [SideStickyBevel       North|South|East|West|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [CornerSize      NorthEast|SouthEast|NorthWest|SouthWest|Any <WIDTHxHEIGHT>]
                      [CornerAlign     NorthEast|SouthEast|NorthWest|SouthWest|Any Left,Top,Right,Bottom,HTiled,VTiled,HScaled,VScaled]
                      [CornerBevel     NorthEast|SouthEast|NorthWest|SouthWest|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [CornerFocusedBevel    NorthEast|SouthEast|NorthWest|SouthWest|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [CornerUnfocusedBevel  NorthEast|SouthEast|NorthWest|SouthWest|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [CornerStickyBevel     NorthEast|SouthEast|NorthWest|SouthWest|Any None|[Left,Top,Right,Bottom,Extra,NoOutline]]
                      [TitleBevel      None|[Left,Top,Right,Bottom,Extra,NoOutline]
                      [TitleFocusedBevel     None|[Left,Top,Right,Bottom,Extra,NoOutline]
                      [TitleUnfocusedBevel   None|[Left,Top,Right,Bottom,Extra,NoOutline]
                      [TitleStickyBevel      None|[Left,Top,Right,Bottom,Extra,NoOutline]
                      [TitleAlign      None|[Left,Top,Right,Bottom]
                      [TitleBackgroundAlign  None|[Left,Top,Right,Bottom,HTiled,VTiled,HScaled,VScaled,LabelSize]
                      [TitleCompositionMethod   testure_type]
                      [TitleFocusedCompositionMethod     testure_type]
                      [TitleUnfocusedCompositionMethod   testure_type]
                      [TitleStickyCompositionMethod      testure_type]
                  ~MyFrame

                   MyFrame allows different MyStyles to be used for titlebar and
                frame decorations. If any of those are ommited - default
                setting from FWindowStyle/UWindowStyle/SWindowStyle will be
                used.
                   To identify side/corner it is possible to use abbreviations,
                such as: N, NW, SW, etc.
                   All the CompositionMethod settings must have one of the
                BackPixmap types from MyStyles ( ie 130-143 )
                   Note that TitleBackground option allows you to specify an
                image to be used under titlebar label in addition to the MyStyle.
                This was done for better shaped titlebars. You may have MyStyle
                to be completely transparent shape, while TitleBackground some
                non-transparent image, and that will provide better visibility
                for the titlebar text.

                [DefaultFrame  "name"]

                   Allows specifying one of the MyFrames defined as
                DefaultFrame causing AfterStep to use it for all the windows,
                except those that have it redefined in database using Frame
                keyword.


        2.3. Root background settings ( aka MyBackground )

                [KillBackgroundThreshold   <size>]
                    Here <size> is the maximum number of pixels in root
                background image. If image is bigger that this - it will be
                unloaded from memory when desktop is switched and image is no
                longer in use. Use it on systems with low memory.

                [DeskBack  desk# "background"]

                   Specifies  what background to use for desk#. "background"
                can be either  image  filename  in  double-quotes,  or  the name
                of background definition (see below).

                MyBackground "background_name"
                  background_option
                ~MyBackground
                   Specifies the beginning of a background definition. The
                background  can be  referred to later by background_name.
                ~MyBackground ends a  root  background definition. The possible
                background_options follow:

                [Use type  "data"]
                   Specifies what to  use  as  the  root  background. Possible
                type values are :
                     0: load image from the file. In that case "data" should
                        specify filename. If "data" is ommited the AfterStep
                        will use default background image file for that desktop
                        ( typically ~/G/L/A/non-configurable/#desk_background )
                     1: Use MyStyle definition to fill root. In that case "data"
                        should specify one of the MyStyle names defined in your
                        look file.
                     2: Use external application to set root background. "data"
                        should specify command line options to this external app.
                        (afterstep is coded by default to use xli. If you wish
                        to use another application to display the root
                        background, you need to set the "--with-imageloader"
                        flag to use that application then recompile AfterStep.)

                Note: remaining Background options are valid only for type of 0!

                The remaining options will perform transformations  on the
                source image, in this order:
                     Cut->Tint->Scale->Align->Pad.

                Cut geometry
                    will cut piece with specified geometry  from the source image.

                Tint color
                    will  tint  image  with color. Gray60 will make image
                    lighter, while Gray40 will make image darker. Tinting
                    it two way !

                Scale [geometry]
                    scale image to specified geometry. If geometry is omitted
                    AfterStep will scale it to the screen size.

                Align [type]
                    it  will  align resulting image according to type.  Possible
                    values are :
                    1: - align to the right of the screen
                    2: - align to the bottom of the screen
                    3: - align to the bottom-right of the screen
                    0 or 4: - align to the center of the screen This option
                     works only in  conjunction  with  the following Pad option.

             Pad [type color]
                    will  pad image if it is smaller then screen
                    with specified color.  Possible type  values
                    are :
                    1: - pad horizontally and tile vertically
                    2: - pad vertically and tile horizontally
                    3: - pad both vertically and horizontally to make the image
                         the size of the screen.

             Note that all the above options with *asetroot appended to them
             will work in order to facilitate compatability with old configs.

        2.4. MyStyle changes
             MaxColors dicontinued
             BackPixmap has numerous new types added :
                2.4.1. Shaped BackPixmap types :
                     125 - image is scaled to the size of TBar and TBar is
                           shaped with alpha channel of this image.
                     126 - image is tiled to fill TBar area and TBar is shaped
                           with alpha channel of the image
                     127 - non-shaped scaled image. Works same as 128, but
                           scales image to fill TBar.
                     128-130 remain unchanged from old times
                     131 - tile and alphablend pixmap into underlying root
                           background.
                     132 - tile pixmap and tint underlying root background with
                           it.

                     133 - tile pixmap and add color values to underlying root
                           background.
                     134 - tile pixmap and subtract color values from underlying
                           root background.
                     135 - tile pixmap and calculate color difference
                           from underlying root background.
                     136 - tile pixmap and darken underlying root background with
                           it.
                     137 - tile pixmap and lighten underlying root background
                           with it.
                     138 - tile pixmap and screen underlying root background with
                           it.
                     139 - tile pixmap and overlay underlying root background
                           with it.
                     140 - tile pixmap and combine its hue with underlying root
                           background.
                     141 - tile pixmap and combine its saturation with underlying
                           root background.
                     142 - tile pixmap and combine its HSV value with underlying
                           root background.
                     143 - tile pixmap and underlying root background with
                           it.
                     144 - tile pixmap and colorize underlying root background
                           with it.
                     145 - tile pixmap and dissipate underlying root background
                           with it.
                     146-148 unused.

                     149 - two way tinting. Similar to 129, but lighter colors
                           will make underlying root background brighter, while
                     darker colors will make it darker.

                     values 150-165 are similar to 130-145, only pixmap is
                     scaled to fill TBar instead of tiled in it.

        2.5. Titlebar buttons
                TitleButtonSpacing
                TitleButtonStyle
                TitleButtonOrder

        2.6. Menu settings
                MenuPinOn
                MenuSubItemStyle
                MenuItemCompositionMethod
                MenuHiliteCompositionMethod
                MenuStippleCompositionMethod

        2.7. Balloon settings
                TitleButtonBalloonBorderHilite
                TitleButtonBalloonXOffset
                TitleButtonBalloonYOffset
                TitleButtonBalloonDelay
                TitleButtonBalloonCloseDelay
                TitleButtonBalloonStyle
                TitleButtonBalloons
                TitleButton


3. Feel options :

        FollowTitleChanges
        PersistentMenus
        NoSnapKey
        ScreenEdgeAttraction
        WindowEdgeAttraction
        DontRestoreFocus
        WindowBox
        DefaultWindowBox
        RecentSubmenuItems


4. Database options
        NoFrame
        Frame
        WindowBox
        DefaultGeometry
        OverrideGravity
        HonorPPosition
        NoPPosition
        HonorGroupHints
        NoGroupHints
        HonorTransientHints
        NoTransientHints
        HonorMotifHints
        NoMotifHints
        HonorGnomeHints
        NoGnomeHints
        HonorExtWMHints
        NoExtWMHints
        HonorXResources
        NoXResources

5. Pager options
        ShadeButton

6. Wharf options
        ShowLabel
        LabelLocation
        FlipLabel
        FitContents
        ShapeToContents
        AlignContents
        Bevel
        CompositionMethod

7. WinList options

        *WinListGeometry                +x+y
        *WinListMinSize                     WxH
        *WinListMaxSize                     WxH
        *WinListMaxRows                     count
        *WinListMaxColumns          count
        *WinListMinColWidth         width
        *WinListMaxColWidth         width
        *WinListFillRowsFirst
        *WinListUseSkipList
        *WinListUnfocusedStyle      "style"
        *WinListFocusedStyle        "style"
        *WinListStickyStyle         "style"
        *WinListUseName                 0|1|2|3   # 0 - Name, 1 - icon, 2 - res_name, 3 - res_class
        *WinListAlign           Left,Right,Top,Bottom
        *WinListBevel           None,Left,Right,Top, Bottom, NoOutline
        *WinListFBevel           None,Left,Right,Top, Bottom, NoOutline
        *WinListUBevel           None,Left,Right,Top, Bottom, NoOutline
        *WinListSBevel           None,Left,Right,Top, Bottom, NoOutline
        *WinListAction          [Click]1|2|3|4|5
        *WinListShapeToContents
8. Depreciated
        8.1. Look :
             MenuPinOn

        8.2. Wharf :
             Folders/~Folders in Wharf config - use Folder/~Folder instead

        8.3. asetroot :
             If AfterSTep proper fails to read any MyBackground definitions
             from the look file - it will attempt to read asteroot file. Althou
             you may be fine for now - make sure you move this config into look
             file, as in future asetroot file may become obsolete.

9. Discontinued
        9.1. Look :
                TextureMaxColors
                MenuPinOff
                TextGradientColor
                GradientText
                ButtonMaxColors

        9.2. Feel :
                MWMFunctionHints
                MWMDecorHints
                MWMHintOverride

        9.3. WinList :
                *WinListHideGeometry        WxH+x+y
                *WinListNoAnchor
                *WinListUseIconNames
                *WinListMaxWidth            width
                *WinListOrientation         across|vertical
                *WinListAutoHide



