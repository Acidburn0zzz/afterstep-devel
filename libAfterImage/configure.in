dnl# -*- sh -*-
dnl# Process this file with autoconf to produce a configure script.
dnl#
dnl#Copyright (c) 1998 Michal Vitecek <fuf@fuf.sh.cvut.cz>
dnl#Copyright (c) 2001,1998 Sasha Vasko <sashav@sprintmail.com>
dnl#Copyright (c) 1998 Juergen Sawinski <Juergen.Sawinski@urz.uni-heidelberg.de>
dnl#Copyright (c) 1997 1998 Guylhem AZNAR <guylhem@oeil.qc.ca>

AC_INIT(Makefile.in)

AC_CONFIG_HEADER(config.h:config.h.in)

version="0.90"
version_major="0"
lib_name="LIBAFTERBASE"
lib_file_name="libAfterBase"

dnl# Setup command-line options

dnl# we need the standard prefixes defined early
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="$prefix"
eval "mandir=$mandir"
eval "libdir=$libdir"
eval "includedir=$includedir"

dnl# compile-time switches
AC_ARG_ENABLE(i18n,			[  --enable-i18n            support I18N [no] ],enable_i18n=$enableval,enable_i18n="no")
AC_ARG_ENABLE(xlocale,		[  --enable-xlocale         using X_LOCALE [no] ],enable_xlocale=$enableval,enable_xlocale="no")
AC_ARG_WITH(locale,			[  --with-locale=LOCALE     locale name you want to use ],with_locale=$withval,with_locale="")
AC_ARG_ENABLE(staticlibs,   [  --enable-staticlibs      enable linking to libafterstep statically [yes] ],enable_staticlibs=$enableval,enable_staticlibs="yes")

AC_ARG_ENABLE(gdb,			[  --enable-gdb             add gdb symbols (-g) (for debugging) [no] ],enable_gdb=$enableval,enable_gdb="no")
AC_ARG_ENABLE(warn,			[  --enable-warn            turn on more compiler warnings (for debugging) [no] ],enable_warn=$enableval,enable_warn="no")
AC_ARG_ENABLE(gprof,		[  --enable-gprof           add gprof symbols (-pg) (for debugging) [no] ],enable_gprof=$enableval,enable_gprof="no")
AC_ARG_ENABLE(audit,		[  --enable-audit           memory usage audit (for debugging) [no] ],enable_audit=$enableval,enable_audit="no")

AC_ARG_WITH(xpm,		    [  --with-xpm               support XPM image format [yes]])
AC_ARG_WITH(xpm_includes,   [  --with-xpm-includes=DIR  use XPM includes in DIR], xpm_includes="$withval", xpm_includes=NO)
AC_ARG_WITH(jpeg		    [  --with-jpeg              support JPEG image format [yes]])
AC_ARG_WITH(jpeg_includes,  [  --with-jpeg-includes=DIR use JPEG includes in DIR], jpeg_includes="$withval", jpeg_includes=NO)
AC_ARG_WITH(png,		    [  --with-png               support PNG image format [yes]])
AC_ARG_WITH(png_includes,   [  --with-png-includes=DIR  use PNG includes in DIR], png_includes="$withval", png_includes=NO)
AC_ARG_WITH(gif,		    [  --with-gif               support GIF image format [yes]])
AC_ARG_WITH(gif_includes,   [  --with-gif-includes=DIR  use GIF includes in DIR], gif_includes="$withval", gif_includes=NO)
AC_ARG_WITH(tiff,		    [  --with-tiff              support TIFF image format [yes]])
AC_ARG_WITH(tiff_includes,  [  --with-tiff-includes=DIR use TIFF includes in DIR], tiff_includes="$withval", tiff_includes=NO)

AC_ARG_WITH(tff,		    [  --with-ttf               support True Type Fonts via FreeType library [yes]])
AC_ARG_WITH(tff_includes,   [  --with-ttf-includes=DIR  use FreeType includes in DIR], ttf_includes="$withval", ttf_includes=NO)

dnl# Check for compiler tools

AC_PROG_CC
AC_PROG_INSTALL
dnl# if the path to the install program is relative, make it absolute
currdir=`pwd`
dnl# INSTALL=`echo $INSTALL|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_PROGRAM=`echo $INSTALL_PROGRAM|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_DATA=`echo $INSTALL_DATA|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_LIB=`echo $INSTALL_LIB|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`

AC_PROG_RANLIB
AC_PATH_PROG(RM, rm, rm)
AC_PATH_PROG(MV, mv, mv)
AC_PATH_PROG(CP, cp, cp)
AC_PATH_PROG(MKDIR, mkdir, mkdir)
AC_PATH_PROG(PERL, perl, perl)
AC_PATH_PROG(FIND, find, find)
AC_PATH_PROG(XARGS, xargs, xargs)
AC_PATH_PROG(LDCONFIG, ldconfig, ldconfig, $PATH:/sbin:/usr/local/sbin)

dnl# let's check for endiannes of our box
AC_C_BIGENDIAN

dnl# Remove -g

if test -n "`echo $CFLAGS' ' | grep '\-g ' 2> /dev/null`" ; then
  CFLAGS=`echo "$CFLAGS " | sed "s/-g / /"`
fi

dnl# Add -Wall

if test "x$GCC" = "xyes"; then
  if test -z "`echo $CFLAGS | grep '\-Wall' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

dnl# Add -fPIC for IA64 compilation

AC_CYGWIN

if test "x$CYGWIN" = "x" -a "x$GCC" = "xyes" ; then
  if test -z "`echo $CFLAGS | grep '\-fPIC' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -fPIC"
  fi
fi

dnl# Add -g

if test "x$enable_gdb" = "xyes"; then
  CFLAGS="$CFLAGS -g"
fi

dnl# Add -pg

if test "x$enable_gprof" = "xyes"; then
  CFLAGS="$CFLAGS -pg"
fi

dnl# Add lots more warnings

if test "x$enable_warn" = "xyes"; then
  CFLAGS="$CFLAGS -Wuninitialized -Wwrite-strings -Wcast-qual -Wbad-function-cast -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wconversion -Wcomment -Wcast-align -Winline -Wshadow -Wredundant-decls -Wid-clash-31"
fi

dnl# Check for headers

AC_PATH_XTRA

INC_PATH_LIST="/usr/include /usr/include/X11 /usr/include/X11R6 \
	/usr/include/X11R5 /usr/include/X11R4        \
    /usr/local/include /usr/local/include/X11 /usr/local/include/X11R6  \
    /usr/local/include/X11R5 /usr/local/include/X11R4  \
    /usr/X11/include /usr/X11R6/include /usr/X11R5/include /usr/X11R4/include  \
    /usr/local/X11/include /usr/local/X11R6/include /usr/local/X11R5/include  \
    /usr/local/X11R4/include  \
    /usr/XFree86/include/X11 /usr/X386/include /usr/x386/include         \
    /usr/unsupported/include /usr/athena/include /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include /usr/openwin/include /usr/openwin/share/include"

if test "$with_xpm" = no; then
  have_xpm=disabled
else
  AC_MSG_CHECKING(for libXpm)
  AC_CACHE_VAL(ac_cv_have_xpm, [
  vt_xpm_include_X11=no
  if test -n "$xpm_includes"; then
    vt_xpm_includes=$xpm_includes
  else
    vt_xpm_includes=NO
  fi

  if test "$vt_xpm_includes" = NO; then
  AC_TRY_CPP([#include <X11/xpm.h>],
  [# We can compile using X headers with no special include directory.
	vt_xpm_includes=
	vt_xpm_include_X11=yes],
  [# Look for the header file in a standard set of common directories.
	for ac_dir in $INC_PATH_LIST ; do
  	  if test -r "$ac_dir/X11/xpm.h"; then
    	vt_xpm_includes="$ac_dir"
        vt_xpm_include_X11=yes
	    break
  	  else
    	if test -r "$ac_dir/xpm.h"; then
      	  vt_xpm_includes=$ac_dir
          break
	    fi
  	  fi
	done])
  fi
  if test "$vt_xpm_includes" = NO; then
    ac_cv_have_xpm="have_xpm=no"
  else
    ac_cv_have_xpm="have_xpm=yes \
      vt_xpm_includes=$vt_xpm_includes \
	vt_xpm_include_X11=$vt_xpm_include_X11"
  fi])dnl
  eval "$ac_cv_have_xpm"
  if test "x$have_xpm" = "xyes"; then 
    if test "x$vt_xpm_includes" != "x"; then 
		XPM_CFLAGS="-I$vt_xpm_includes"
    fi
	AC_DEFINE(HAVE_XPM)
    if test "$vt_xpm_include_X11" = yes; then
	  AC_DEFINE(HAVE_XPM_X11)
	fi
  fi
  AC_MSG_RESULT($have_xpm $XPM_CFLAG)
fi

AC_SUBST(XPM_CFLAGS)

if test "$with_jpeg" = no; then
  have_jpeg=disabled
else
  AC_MSG_CHECKING(for libjpeg)
  AC_CACHE_VAL(ac_cv_have_jpeg, [
  if test -n "$jpeg_includes"; then
    vt_jpeg_includes=$jpeg_includes
  else
    vt_jpeg_includes=NO
  fi

  if test "$vt_jpeg_includes" = NO; then
  AC_TRY_CPP([#include <jpeglib.h>],
  [# We can compile using X headers with no special include directory.
	vt_jpeg_includes=],
  [# Look for the header file in a standard set of common directories.
	for ac_dir in $INC_PATH_LIST ; do
    	if test -r "$ac_dir/jpeglib.h"; then
      	  vt_jpeg_includes=$ac_dir
          break
	    fi
	done])
  fi
  if test "$vt_jpeg_includes" = NO; then
    ac_cv_have_jpeg="have_jpeg=no"
  else
    ac_cv_have_jpeg="have_jpeg=yes \
      vt_jpeg_includes=$vt_jpeg_includes"
	if test "x$vt_jpeg_includes" != "x"; then 
		JPEG_CFLAGS=-I$vt_jpeg_includes
	fi
	AC_DEFINE(HAVE_JPEG)
  fi])dnl
  eval "$ac_cv_have_jpeg"
  if test "x$have_jpeg" = "xyes"; then 
    if test "x$vt_jpeg_includes" != "x"; then 
		JPEG_CFLAGS="-I$vt_jpeg_includes"
    fi
	AC_DEFINE(HAVE_JPEG)
  fi
  AC_MSG_RESULT($have_jpeg $JPEG_CFLAG)
fi
AC_SUBST(JPEG_CFLAGS)

if test "$with_png" = no; then
  have_png=disabled
else
  AC_MSG_CHECKING(for libpng)
  AC_CACHE_VAL(ac_cv_have_png, [
  if test -n "$png_includes"; then
    vt_png_includes=$png_includes
  else
    vt_png_includes=NO
  fi

  if test "$vt_png_includes" = NO; then
  AC_TRY_CPP([#include <png.h>],
  [# We can compile using X headers with no special include directory.
	vt_png_includes=],
  [# Look for the header file in a standard set of common directories.
	for ac_dir in $INC_PATH_LIST ; do
    	if test -r "$ac_dir/png.h"; then
      	  vt_png_includes=$ac_dir
          break
	    fi
	done])
  fi
  if test "$vt_png_includes" = NO; then
    ac_cv_have_png="have_png=no"
  else
    ac_cv_have_png="have_png=yes \
      vt_png_includes=$vt_png_includes"
  fi])dnl
  eval "$ac_cv_have_png"
  if test "x$have_png" = "xyes"; then 
    if test "x$vt_png_includes" != "x"; then 
		PNG_CFLAGS="-I$vt_png_includes"
    fi
	AC_DEFINE(HAVE_PNG)
  fi
  AC_MSG_RESULT($have_png $PNG_CFLAGS)
fi
AC_SUBST(PNG_CFLAGS)

dnl# Test for libungif first :
if test "$with_gif" = no; then
  have_gif=disabled
else
  if test "$gif_includes" = NO; then
    AC_CHECK_LIB(ungif, DGifOpenFileName,
		     GIF_LIBS="-lungif"
		     have_gif=yes, have_gif=no,$x_libs)
	if test "x$have_gif" = "xno"; then
	  AC_CHECK_LIB(gif, DGifOpenFileName,
  				 GIF_LIBS="-lgif"
				 have_gif="yes", have_gif="no",$x_libs)

	fi;
	if test "x$have_gif" = "xyes"; then
	  AC_CHECK_HEADER(gif_lib.h,AC_DEFINE(HAVE_GIF),have_gif=no GIF_LIBS="")
	fi
	GIF_CFLAGS=
  else
  	if test "x$gif_includes" != "x"; then 
		GIF_CFLAGS=-I$gif_includes
	fi
	AC_DEFINE(HAVE_GIF)
  fi	
fi
AC_SUBST(GIF_CFLAGS)
dnl# Test for libtiff :

if test "$with_tiff" = no; then
  have_tiff=disabled
else
  if test "$tiff_includes" = NO; then
    AC_CHECK_LIB(tiff, TIFFReadScanline,
			   TIFF_LIBS="-ltiff" have_tiff=yes,
		AC_CHECK_LIB(tiff, TIFFReadScanline,
			     TIFF_LIBS="-ltiff" have_tiff=yes,
			AC_CHECK_LIB(tiff, TIFFReadScanline,
  					  TIFF_LIBS="-ltiff -ljpeg -lz -lm" have_tiff=yes,,
					  $x_libs -ljpeg -lz -lm),
				 $x_libs $JPEG_LIBS $PNG_LIBS),
			$x_libs)
    if test "x$have_tiff" = "xyes"; then
		AC_CHECK_HEADER(tiffio.h,AC_DEFINE(HAVE_TIFF),TIFF_LIBS="" have_tiff=no)
	fi
	TIFF_CFLAGS=
  else
    AC_MSG_CHECKING(extra path to TIFF includes)
	if test "x$tiff_includes" != "x"; then
		TIFF_CFLAGS=-I$tiff_includes
	fi		
	AC_DEFINE(HAVE_TIFF)
    AC_MSG_RESULT($TIFF_CFLAGS)
  fi	
fi
AC_SUBST(TIFF_CFLAGS)

dnl# check for libfreetype

AC_CHECK_HEADERS(ft2build.h)

TTF_INCLUDES=

if test "x$with_ttf" = NO; then
  have_ttf=disabled
else
  if test "$ttf_includes" = NO; then
    AC_MSG_CHECKING(headers required by TTF support)
    if freetype-config --cflags >/dev/null  ;then
	  present_incs="$CCFLAGS $x_includes";
	  for l in `freetype-config --cflags` ;	do
	    inc_found=no
	    for p in `echo "$present_incs"` ; do
		if test "x$l" = "x$p" ; then
    		    inc_found=yes;
		fi;
		if test "x$l" = "x-I$p" ; then
    		    inc_found=yes;
		fi;
	    done;
	    if test "x$inc_found" != "xyes" ; then
		TTF_INCLUDES="$TTF_INCLUDES $l" ;
	    fi;
	  done;
	  AC_MSG_RESULT($TTF_INCLUDES)
	  AC_DEFINE(HAVE_FREETYPE)
    else
		enable_ttf=no ;
		AC_MSG_RESULT(none found, ttf disabled)
		echo "You have to install FreeType libary in order to be able to use TTF fonts."
    fi;
  else
	TTF_INCLUDES=$ttf_includes
	AC_DEFINE(HAVE_FREETYPE)
  fi	
fi;
AC_SUBST(TTF_INCLUDES)



dnl# Checks for optional programs

AC_CHECK_PROG(sgmltools, sgmltools, HAVE_SGMLTOOLS, NO_SGMLTOOLS)

dnl# Checks for functions

dnl# check for inline : (slightly different from standard version from autoconf )

AC_CACHE_CHECK([for inline], ac_cv_c_inline,
[ac_cv_c_inline=no
for ac_kw in inline __inline__ __inline; do
  AC_TRY_COMPILE(, [} $ac_kw foo() {], [ac_cv_c_inline=$ac_kw; break])
done
])
case "$ac_cv_c_inline" in
  inline | yes) ;;
  no) AC_DEFINE(inline, ) AC_DEFINE(NO_INLINE, ) ;;
  *)  AC_DEFINE_UNQUOTED(inline, $ac_cv_c_inline) ;;
esac;

dnl# Check for X

saved_cflags="$CFLAGS"

if test "x$enable_staticlibs" = "xyes"; then
   LIBPROG='$(LIB_STATIC)'
   LIBINSTALL="install.static"
else
   LIBPROG='$(LIB_SHARED)'
   LIBINSTALL="install.dyn"
fi

dnl# define X_LOCALE.  need Linux, NetBSD and etc.

if test "x$enable_xlocale" = "xyes"; then
  DEFINE_XLOCALE="-DX_LOCALE"
fi

dnl# Translate enable_* from "yes/no" to "1/0" (for configure.h)

if test "x$enable_i18n" = "xyes"; then AC_DEFINE(I18N) fi
if test "x$enable_audit" = "xyes"; then AC_DEFINE(DEBUG_ALLOCS) fi

dnl# Variable strings declaration

AC_SUBST(version)
AC_SUBST(version_major)
AC_SUBST(lib_name)
AC_SUBST(lib_file_name)
AC_SUBST(with_locale)
AC_SUBST(X_CFLAGS)
AC_SUBST(LIBPROG)
AC_SUBST(LIBINSTALL)
AC_SUBST(DEFINE_XLOCALE)
AC_SUBST(sgmltools)
AC_SUBST(PERL)

dnl# Write results

AC_CONFIG_HEADER(config.h)

dnl# Common parts of the Makefile

AC_OUTPUT(Makefile)
