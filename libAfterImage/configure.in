dnl# -*- sh -*-
dnl# Process this file with autoconf to produce a configure script.
dnl#
dnl#Copyright (c) 1998 Michal Vitecek <fuf@fuf.sh.cvut.cz>
dnl#Copyright (c) 2001,1998 Sasha Vasko <sashav@sprintmail.com>
dnl#Copyright (c) 1998 Juergen Sawinski <Juergen.Sawinski@urz.uni-heidelberg.de>
dnl#Copyright (c) 1997 1998 Guylhem AZNAR <guylhem@oeil.qc.ca>

AC_INIT(Makefile.in)

AC_CONFIG_HEADER(config.h:config.h.in)

version="0.90"
version_major="0"
lib_name="LIBAFTERIMAGE"
lib_file_name="libAfterImage"

dnl# Setup command-line options

dnl# we need the standard prefixes defined early
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="$prefix"
eval "mandir=$mandir"
eval "libdir=$libdir"
eval "includedir=$includedir"

dnl# compile-time switches
AC_ARG_ENABLE(i18n,			[  --enable-i18n            support I18N [no] ],enable_i18n=$enableval,enable_i18n="no")
AC_ARG_ENABLE(xlocale,		[  --enable-xlocale         using X_LOCALE [no] ],enable_xlocale=$enableval,enable_xlocale="no")
AC_ARG_WITH(locale,			[  --with-locale=LOCALE     locale name you want to use ],with_locale=$withval,with_locale="")
AC_ARG_ENABLE(staticlibs,   [  --enable-staticlibs      enable linking to libafterstep statically [yes] ],enable_staticlibs=$enableval,enable_staticlibs="yes")

AC_ARG_ENABLE(gdb,			[  --enable-gdb             add gdb symbols (-g) (for debugging) [no] ],enable_gdb=$enableval,enable_gdb="no")
AC_ARG_ENABLE(warn,			[  --enable-warn            turn on more compiler warnings (for debugging) [no] ],enable_warn=$enableval,enable_warn="no")
AC_ARG_ENABLE(gprof,		[  --enable-gprof           add gprof symbols (-pg) (for debugging) [no] ],enable_gprof=$enableval,enable_gprof="no")
AC_ARG_ENABLE(audit,		[  --enable-audit           memory usage audit (for debugging) [no] ],enable_audit=$enableval,enable_audit="no")

AC_ARG_WITH(xpm,		    [  --with-xpm               support XPM image format [yes]])
AC_ARG_WITH(xpm_includes,   [  --with-xpm-includes=DIR  use XPM includes in DIR], xpm_includes="$withval", xpm_includes=NO)
AC_ARG_WITH(jpeg,		    [  --with-jpeg              support JPEG image format [yes]])
AC_ARG_WITH(jpeg_includes,  [  --with-jpeg-includes=DIR use JPEG includes in DIR], jpeg_includes="$withval", jpeg_includes=NO)
AC_ARG_WITH(png,		    [  --with-png               support PNG image format [yes]])
AC_ARG_WITH(png_includes,   [  --with-png-includes=DIR  use PNG includes in DIR], png_includes="$withval", png_includes=NO)
AC_ARG_WITH(ungif,		    [  --with-ungif             support GIF image format using libungif [yes]])
AC_ARG_WITH(gif,		    [  --with-gif               support GIF image format using libgif   [no]])
AC_ARG_WITH(gif_includes,   [  --with-gif-includes=DIR  use GIF includes in DIR], gif_includes="$withval", gif_includes=NO)
AC_ARG_WITH(tiff,		    [  --with-tiff              support TIFF image format [yes]])
AC_ARG_WITH(tiff_includes,  [  --with-tiff-includes=DIR use TIFF includes in DIR], tiff_includes="$withval", tiff_includes=NO)

AC_ARG_WITH(tff,		    [  --with-ttf               support True Type Fonts via FreeType library [yes]])
AC_ARG_WITH(tff_includes,   [  --with-ttf-includes=DIR  use FreeType includes in DIR], ttf_includes="$withval", ttf_includes=NO)

AC_ARG_WITH(afterbase,		    [  --with-afterbase               use libAfterBase library of basic functionality [yes]])
AC_ARG_WITH(afterbase_includes, [  --with-afterbase-includes=DIR  use libAfterBase includes in DIR], afterbase_includes="$withval", afterbase_includes=NO)

dnl# Check for compiler tools

AC_PROG_CC
AC_PROG_INSTALL
dnl# if the path to the install program is relative, make it absolute
currdir=`pwd`
dnl# INSTALL=`echo $INSTALL|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_PROGRAM=`echo $INSTALL_PROGRAM|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_DATA=`echo $INSTALL_DATA|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
dnl# INSTALL_LIB=`echo $INSTALL_LIB|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`

AC_PROG_RANLIB
AC_PATH_PROG(RM, rm, rm)
AC_PATH_PROG(MV, mv, mv)
AC_PATH_PROG(CP, cp, cp)
AC_PATH_PROG(MKDIR, mkdir, mkdir)
AC_PATH_PROG(PERL, perl, perl)
AC_PATH_PROG(FIND, find, find)
AC_PATH_PROG(XARGS, xargs, xargs)
AC_PATH_PROG(LDCONFIG, ldconfig, ldconfig, $PATH:/sbin:/usr/local/sbin)

dnl# let's check for endiannes of our box
AC_C_BIGENDIAN

dnl# Remove -g

if test -n "`echo $CFLAGS' ' | grep '\-g ' 2> /dev/null`" ; then
  CFLAGS=`echo "$CFLAGS " | sed "s/-g / /"`
fi

dnl# Add -Wall

if test "x$GCC" = "xyes"; then
  if test -z "`echo $CFLAGS | grep '\-Wall' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

dnl# Add -fPIC for IA64 compilation

AC_CYGWIN

if test "x$CYGWIN" = "x" -a "x$GCC" = "xyes" ; then
  if test -z "`echo $CFLAGS | grep '\-fPIC' 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -fPIC"
  fi
fi

dnl# Add -g

if test "x$enable_gdb" = "xyes"; then
  CFLAGS="$CFLAGS -g"
fi

dnl# Add -pg

if test "x$enable_gprof" = "xyes"; then
  CFLAGS="$CFLAGS -pg"
fi

dnl# Add lots more warnings

if test "x$enable_warn" = "xyes"; then
  CFLAGS="$CFLAGS -Wuninitialized -Wwrite-strings -Wcast-qual -Wbad-function-cast -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wconversion -Wcomment -Wcast-align -Winline -Wshadow -Wredundant-decls -Wid-clash-31"
fi

dnl# some standard checks :
AC_C_INLINE
AC_PATH_XTRA

dnl# Check for graphics libraries :

AFTERIMAGE_LIBS=

if test "$with_xpm" = no; then
  have_xpm=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$xpm_includes" != NO; then
	XPM_CFLAGS="-I$xpm_includes"
	CPPFLAGS="$CPPFLAGS $XPM_CFLAGS"
  fi
  AC_CHECK_HEADER(xpm.h,have_xpm=yes,
				  [AC_CHECK_HEADER(X11/xpm.h,[have_xpm=yes AC_DEFINE(HAVE_XPM_X11)])
				  ])
  if test "x$have_xpm" = "xyes"; then
	AC_DEFINE(HAVE_XPM)
	AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lXpm"
  fi
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(XPM_CFLAGS)

if test "$with_jpeg" = no; then
  have_jpeg=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$jpeg_includes" != NO; then
	JPEG_CFLAGS="-I$jpeg_includes"
	CPPFLAGS="$CPPFLAGS $JPEG_CFLAGS"
  fi
  AC_CHECK_HEADER(jpeglib.h,[AC_DEFINE(HAVE_JPEG) EXT_IMAGE_LIBS="$AFTERIMAGE_LIBS -ljpeg"])
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(JPEG_CFLAGS)

if test "$with_png" = no; then
  have_png=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$png_includes" != NO; then
	PNG_CFLAGS="-I$png_includes"
	CPPFLAGS="$CPPFLAGS $PNG_CFLAGS"
  fi
  AC_CHECK_HEADER(png.h,[AC_DEFINE(HAVE_PNG) AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lpng" have_png=yes])
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(PNG_CFLAGS)

dnl# Test for libungif first :
if test "$with_gif$with_ungif" = nono; then
  have_gif=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$gif_includes" != NO; then
	GIF_CFLAGS="-I$gif_includes"
	CPPFLAGS="$CPPFLAGS $GIF_CFLAGS"
  fi
  AC_CHECK_HEADER(gif_lib.h,have_gif=yes)
  CPPFLAGS=$SAVED_CFLAGS
  if test "x$have_gif" = "xyes"; then
	AC_DEFINE(HAVE_GIF) 
	if test "$with_gif" = no; then
		AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lungif"
	else
		AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lgif"
	fi
  fi
fi
AC_SUBST(GIF_CFLAGS)

dnl# Test for libtiff :

if test "$with_tiff" = no; then
  have_tiff=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$tiff_includes" != NO; then
	TIFF_CFLAGS="-I$tiff_includes"
	CPPFLAGS="$CPPFLAGS $TIFF_CFLAGS"
  fi
  AC_CHECK_HEADER(tiffio.h,[AC_DEFINE(HAVE_TIFF) AFTERIMAGE_LIBS="-ltiff $AFTERIMAGE_LIBS" have_tiff=yes])
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(TIFF_CFLAGS)

if test "$have_tiff" = yes -o "$have_png" = yes ; then
  AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lz -lm"
fi  


dnl# check for libfreetype

AC_CHECK_HEADERS(ft2build.h)

TTF_INCLUDES=

if test "x$with_ttf" = "xNO"; then
  have_ttf=disabled
else
  if test "$ttf_includes" = NO; then
    AC_MSG_CHECKING(headers required by TTF support)
    if freetype-config --cflags >/dev/null  ;then
	  present_incs="$CCFLAGS $x_includes";
	  for l in `freetype-config --cflags` ;	do
	    inc_found=no
	    for p in `echo "$present_incs"` ; do
		if test "x$l" = "x$p" ; then
    		    inc_found=yes;
		fi;
		if test "x$l" = "x-I$p" ; then
    		    inc_found=yes;
		fi;
	    done;
	    if test "x$inc_found" != "xyes" ; then
		TTF_INCLUDES="$TTF_INCLUDES $l" ;
	    fi;
	  done;
	  AC_MSG_RESULT($TTF_INCLUDES)
	  AC_DEFINE(HAVE_FREETYPE)
	  have_ttf=yes
    else
		enable_ttf=no ;
		AC_MSG_RESULT(none found, ttf disabled)
		echo "You have to install FreeType libary in order to be able to use TTF fonts."
        have_ttf=no
    fi;
  else
	TTF_INCLUDES=$ttf_includes
	AC_DEFINE(HAVE_FREETYPE)
    have_ttf=yes
  fi	
  if test "$have_ttf" = yes; then
	  AFTERIMAGE_LIBS="`freetype-config --libs` $AFTERIMAGE_LIBS"
  fi
fi;
AC_SUBST(TTF_INCLUDES)

if test "$with_afterbase" != "NO"; then
  AC_MSG_CHECKING(libAfterBase headers)
  have_afterbase=yes 
  if test "$afterbase_includes" = NO; then
	  if test -r "../libAfterBase/astypes.h"; then
		AC_DEFINE(HAVE_AFTERBASE) 
		AC_DEFINE(HAVE_CUSTOM_AFTERBASE)
        AFTERBASE_INC_PATH=".."
		AC_MSG_RESULT("../libAfterBase/astypes.h")
	  else
 	    AC_CHECK_HEADER(libAfterBase/astypes.h,
					    [AC_DEFINE(HAVE_AFTERBASE) \
						 AC_MSG_RESULT("<libAfterBase/astypes.h>")],
						[AC_MSG_RESULT("none found") have_afterbase=no])
	  fi	
  else
	  AC_DEFINE(HAVE_AFTERBASE) 
	  AC_DEFINE(HAVE_CUSTOM_AFTERBASE)	  
	  AFTERBASE_INC_PATH=$afterbase_includes
  	  AC_MSG_RESULT("$AFTERBASE_INC_PATH/libAfterBase/astypes.h>")
  fi
fi

AFTERBASE_C=afterbase.c
if test "x$have_afterbase" = "xyes"; then 
	AFTERBASE_C=
    AFTERIMAGE_LIBS="-lafterbase $AFTERIMAGE_LIBS"
fi
AC_SUBST(AFTERBASE_INC_PATH)
AC_SUBST(AFTERBASE_C)


dnl# finalizing libs listing :

CLEAN_AFTERIMAGE_LIBS=
for L in $AFTERIMAGE_LIBS; do
  if test "$L" != "-L$libdir"; then
	  CLEAN_AFTERIMAGE_LIBS="$CLEAN_AFTERIMAGE_LIBS $L"
  fi
done
AFTERIMAGE_LIBS="-L$libdir -lafterimage $CLEAN_AFTERIMAGE_LIBS"
AC_SUBST(AFTERIMAGE_LIBS)

dnl# Checks for optional programs

AC_CHECK_PROG(sgmltools, sgmltools, HAVE_SGMLTOOLS, NO_SGMLTOOLS)

dnl# Checks for functions

dnl# Check for X

saved_cflags="$CFLAGS"

if test "x$enable_staticlibs" = "xyes"; then
   LIBPROG='$(LIB_STATIC)'
   LIBINSTALL="install.static"
else
   LIBPROG='$(LIB_SHARED)'
   LIBINSTALL="install.dyn"
fi

dnl# define X_LOCALE.  need Linux, NetBSD and etc.

if test "x$enable_xlocale" = "xyes"; then
  DEFINE_XLOCALE="-DX_LOCALE"
fi

dnl# Translate enable_* from "yes/no" to "1/0" (for configure.h)

if test "x$enable_i18n" = "xyes"; then AC_DEFINE(I18N) fi
if test "x$enable_audit" = "xyes"; then AC_DEFINE(DEBUG_ALLOCS) fi

dnl# Variable strings declaration

AC_SUBST(version)
AC_SUBST(version_major)
AC_SUBST(lib_name)
AC_SUBST(lib_file_name)
AC_SUBST(with_locale)
AC_SUBST(X_CFLAGS)
AC_SUBST(LIBPROG)
AC_SUBST(LIBINSTALL)
AC_SUBST(DEFINE_XLOCALE)
AC_SUBST(sgmltools)
AC_SUBST(PERL)

dnl# Write results

AC_CONFIG_HEADER(config.h)

dnl# Common parts of the Makefile

AC_OUTPUT(Makefile \
afterbase.h \
afterimage-libs)

chmod 755 afterimage-libs
