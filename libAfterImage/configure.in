dnl# -*- sh -*-
dnl# Process this file with autoconf to produce a configure script.
dnl#
dnl#Copyright (c) 1998 Michal Vitecek <fuf@fuf.sh.cvut.cz>
dnl#Copyright (c) 2001,1998 Sasha Vasko <sasha at aftercode.net>
dnl#Copyright (c) 1998 Juergen Sawinski <Juergen.Sawinski@urz.uni-heidelberg.de>
dnl#Copyright (c) 1997 1998 Guylhem AZNAR <guylhem@oeil.qc.ca>

AC_INIT(Makefile.in)

AC_CONFIG_HEADER(config.h:config.h.in)

version="0.93"
version_major="0"
lib_name="LIBAFTERIMAGE"
lib_file_name="libAfterImage"

dnl# Setup command-line options

dnl# we need the standard prefixes defined early
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="$prefix"
eval "mandir=$mandir"
eval "libdir=$libdir"
eval "includedir=$includedir"

dnl# compile-time switches
AC_ARG_ENABLE(i18n,			[  --enable-i18n            support I18N [no] ],enable_i18n=$enableval,enable_i18n="no")
AC_ARG_ENABLE(xlocale,		[  --enable-xlocale         using X_LOCALE [no] ],enable_xlocale=$enableval,enable_xlocale="no")
AC_ARG_WITH(locale,			[  --with-locale=LOCALE     locale name you want to use ],with_locale=$withval,with_locale="")
AC_ARG_ENABLE(staticlibs,   [  --enable-staticlibs      enable linking to libAfterImage statically [yes] ],enable_staticlibs=$enableval,enable_staticlibs="yes")
AC_ARG_ENABLE(sharedlibs,   [  --enable-sharedlibs      enable linking to libAfterImage dynamically [no] ],enable_sharedlibs=$enableval,enable_sharedlibs="no")

AC_ARG_ENABLE(gdb,			[  --enable-gdb             add gdb symbols (-g) (for debugging) [no] ],enable_gdb=$enableval,enable_gdb="no")
AC_ARG_ENABLE(warn,			[  --enable-warn            turn on more compiler warnings (for debugging) [no] ],enable_warn=$enableval,enable_warn="no")
AC_ARG_ENABLE(gprof,		[  --enable-gprof           add gprof symbols (-pg) (for debugging) [no] ],enable_gprof=$enableval,enable_gprof="no")
AC_ARG_ENABLE(audit,		[  --enable-audit           memory usage audit (for debugging) [no] ],enable_audit=$enableval,enable_audit="no")
AC_ARG_ENABLE(shmimage,		[  --enable-shmimage        enable usage of MIT shared memory extention for image transfer [no] ],enable_shmimage=$enableval,enable_shmimage="no")

AC_ARG_ENABLE(mmx_optimization,
							[  --enable-mmx-optimization  enable utilization of MMX instruction set to speed up imaging operations [yes] ],enable_mmx_optimization=$enableval,enable_mmx_optimization="yes")

AC_ARG_WITH(xpm,	    	[  --with-xpm               support XPM image format [yes]])
AC_ARG_WITH(builtin_xpm,    [  --with-builtin-xpm       use builtin XPM parsing/handling instead of libXpm [yes]])
AC_ARG_WITH(xpm_includes,   [  --with-xpm-includes=DIR  use libXpm includes in DIR( when builtin XPM handling is disabled )], xpm_includes="$withval", xpm_includes=NO)
AC_ARG_WITH(jpeg,		    [  --with-jpeg              support JPEG image format [yes]])
AC_ARG_WITH(jpeg_includes,  [  --with-jpeg-includes=DIR use JPEG includes in DIR], jpeg_includes="$withval", jpeg_includes=NO)
AC_ARG_WITH(png,		    [  --with-png               support PNG image format [yes]])
AC_ARG_WITH(png_includes,   [  --with-png-includes=DIR  use PNG includes in DIR], png_includes="$withval", png_includes=NO)
AC_ARG_WITH(ungif,		    [  --with-ungif             support GIF image format using libungif [yes]])
AC_ARG_WITH(gif,		    [  --with-gif               support GIF image format using libgif   [no]])
AC_ARG_WITH(gif_includes,   [  --with-gif-includes=DIR  use GIF includes in DIR], gif_includes="$withval", gif_includes=NO)
AC_ARG_WITH(tiff,		    [  --with-tiff              support TIFF image format [yes]])
AC_ARG_WITH(tiff_includes,  [  --with-tiff-includes=DIR use TIFF includes in DIR], tiff_includes="$withval", tiff_includes=NO)

AC_ARG_WITH(tff,		    [  --with-ttf               support True Type Fonts via FreeType library [yes]])
AC_ARG_WITH(tff_includes,   [  --with-ttf-includes=DIR  use FreeType includes in DIR], ttf_includes="$withval", ttf_includes=NO)

AC_ARG_WITH(afterbase,		    [  --with-afterbase               use libAfterBase library of basic functionality [yes]])
AC_ARG_WITH(afterbase_includes, [  --with-afterbase-includes=DIR  use libAfterBase includes in DIR], afterbase_includes="$withval", afterbase_includes=NO)

dnl# Check for compiler tools

if test "x$FROM_AFTERSTEP_CONFIGURE" = "xyes"; then
dnl# AfterSTep already checked everything for us
	aaa=bbb
	dnl#  AC_PROG_CC
	AC_SUBST(CC)
	AC_SUBST(GCC)
	dnl#  AC_PROG_INSTALL
    AC_SUBST(INSTALL)
    AC_SUBST(INSTALL_PROGRAM)
    AC_SUBST(INSTALL_DATA)
    AC_SUBST(INSTALL_LIB)
    AC_SUBST(RANLIB)
    AC_SUBST(RM)
    AC_SUBST(MV)
    AC_SUBST(CP)
    AC_SUBST(MKDIR)
    AC_SUBST(PERL)
    AC_SUBST(FIND)
    AC_SUBST(XARGS)
    AC_SUBST(LDCONFIG)
    AC_SUBST(LEX)
    AC_SUBST(LEXLIB)
    AC_SUBST(YACC)
    AC_SUBST(sgmltools)
	if test "x$have_shmimage" = "xyes"; then
		AC_DEFINE(XSHMIMAGE)
    fi
else

dnl# we are alone - have to do all the checks ourselves :
	AC_PROG_CC
	dnl# Remove -g
	if test -n "`echo $CFLAGS' ' | grep '\-g ' 2> /dev/null`" ; then
	  CFLAGS=`echo "$CFLAGS " | sed "s/-g / /"`
	fi
	dnl# Add -Wall
	if test "x$GCC" = "xyes"; then
	  if test -z "`echo $CFLAGS | grep '\-Wall' 2> /dev/null`" ; then
  		CFLAGS="$CFLAGS -Wall"
	  fi
	fi

	dnl# Add -fPIC for IA64 compilation

	AC_CYGWIN
	if test "x$CYGWIN" = "x" -a "x$GCC" = "xyes" ; then
	  if test -z "`echo $CFLAGS | grep '\-fPIC' 2> /dev/null`" ; then
  		CFLAGS="$CFLAGS -fPIC"
	  fi
	fi
	dnl# Add -g
	if test "x$enable_gdb" = "xyes"; then
	  CFLAGS="$CFLAGS -g"
	  LDFLAGS="$LDFLAGS -g"
	fi
	dnl# Add -pg
	if test "x$enable_gprof" = "xyes"; then
	  CFLAGS="$CFLAGS -pg"
	  LDFLAGS="$LDFLAGS -pg"
	fi
	dnl# Add lots more warnings
	if test "x$enable_warn" = "xyes"; then
	  CFLAGS="$CFLAGS -Wuninitialized -Wwrite-strings -Wcast-qual -Wbad-function-cast -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wconversion -Wcomment -Wcast-align -Winline -Wshadow -Wredundant-decls -Wid-clash-31"
	fi
	if test "x$GCC" = "xyes"; then
	   LDFLAGS="$LDFLAGS -rdynamic"
	fi

	AC_PROG_INSTALL
	dnl# if the path to the install program is relative, make it absolute
	currdir=`pwd`
	INSTALL=`echo $INSTALL|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
	INSTALL_PROGRAM=`echo $INSTALL_PROGRAM|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
	INSTALL_DATA=`echo $INSTALL_DATA|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`
	INSTALL_LIB=`echo $INSTALL_LIB|sed -e "s@\^\.\.@${currdir}@" -e "s@^autoconf@${currdir}/autoconf@"`

	AC_PROG_RANLIB
	AC_PATH_PROG(RM, rm, rm)
	AC_PATH_PROG(MV, mv, mv)
	AC_PATH_PROG(CP, cp, cp)
	AC_PATH_PROG(MKDIR, mkdir, mkdir)
	AC_PATH_PROG(PERL, perl, perl)
	AC_PATH_PROG(FIND, find, find)
	AC_PATH_PROG(XARGS, xargs, xargs)
	AC_PATH_PROG(LDCONFIG, ldconfig, ldconfig, $PATH:/sbin:/usr/local/sbin)
	AC_CHECK_PROG(sgmltools, sgmltools, HAVE_SGMLTOOLS, NO_SGMLTOOLS)
fi

dnl# Check for MMX :
if test "x$enable_mmx_optimization" = "xyes"; then
  AC_MSG_CHECKING(for MMX support)
  if test -z "`echo $build_cpu 2>&1 | grep i*86 >/dev/null`"; then
	AC_TRY_RUN([int main(){int mmx_available = 0;
				  asm volatile ( "pushl %%eax\n\t"
                      "pushl %%ebx\n\t"
                      "pushl %%ecx\n\t"
                      "pushl %%edx\n\t"
                      "movl \$1, %%eax\n\t"
                      "cpuid\n\t"
                      "andl \$0x800000, %%edx \n\t"
					  "movl %%edx, %0\n\t"
                      "popl %%edx\n\t"
                      "popl %%ecx\n\t"
                      "popl %%ebx\n\t"
                      "popl %%eax\n\t"
                      : "=m" (mmx_available)
                      : /* no input */
					  : "ebx", "ecx", "edx"
				);return mmx_available!=0?0:1;}],
				[AC_DEFINE(HAVE_MMX) AC_MSG_RESULT(yes)],AC_MSG_RESULT(no))
  else
	  AC_MSG_RESULT(skipped)
  fi
fi

dnl# Check for X :
dnl# check for X, if top level configure script did not do that yet :
if test "x$PATH_XTRA_CHECKED" != "xyes"; then
	AC_PATH_XTRA
else
  if test "x$have_x" != "xyes"; then
	  AC_DEFINE(X_DISPLAY_MISSING)
  fi
fi

if test "x$have_x" = "xyes"; then
  x_libs="$LDFLAGS $X_LIBS $X_EXTRA_LIBS $X_PRE_LIBS"
  AC_CHECK_LIB(X11, XOpenDisplay, [x_libs="-lX11 $x_libs"],,$x_libs)
fi

dnl# Construct Gnu/AfterStep path from pieces
with_gnustep_lib=${with_gnustep_dir}/${with_gnustep_lib}
with_afterdir=${with_gnustep_lib}/${with_afterdir}

dnl# some standard checks :
dnl# let's check for endiannes of our box
AC_C_BIGENDIAN
AC_C_INLINE

dnl# Check for headers
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_HEADERS(sys/wait.h sys/time.h)

dnl# Check for X shaped window extension
have_shmimage=no
have_xext_lib=no
if test "x$enable_shmimage" = "xyes"; then
	AC_CHECK_LIB(Xext, XShmCreateImage, [have_shmimage=yes],,$x_libs)
	if test "x$have_shmimage" = "xyes"; then
		AC_CHECK_HEADER(sys/ipc.h,,[have_shmimage=no])
	fi
	if test "x$have_shmimage" = "xyes"; then
		AC_CHECK_HEADER(sys/shm.h,,[have_shmimage=no])
	fi
	if test "x$have_shmimage" = "xyes"; then
		have_xext_lib=yes
		AC_DEFINE(XSHMIMAGE)
	fi
fi

if test "x$have_xext_lib" = "xyes"; then
    x_libs="$x_libs -lXext"
fi

dnl# Check for graphics libraries :

image_format="xpm"

AFTERIMAGE_LIBS=

if test "$with_xpm" = no; then
  have_xpm=disabled
else
  if test "$with_builtin_xpm" = no; then
  	SAVED_CFLAGS=$CPPFLAGS
  	if test "$xpm_includes" != NO; then
		XPM_CFLAGS="-I$xpm_includes"
		CPPFLAGS="$CPPFLAGS $XPM_CFLAGS"
  	fi
	have_libxpm=no
  	AC_CHECK_HEADER(xpm.h,have_libxpm=yes)
	if test "x$have_libxpm" = "xno"; then
		AC_CHECK_HEADER(X11/xpm.h,have_libxpm_x11="yes")
		if test "x$have_libxpm_x11" = "xyes"; then
			 AC_DEFINE(HAVE_LIBXPM_X11)
			 have_libxpm=yes
		fi
	fi
  	if test "x$have_libxpm" = "xyes"; then
		AC_DEFINE(HAVE_XPM)
		AC_DEFINE(HAVE_LIBXPM)
		AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lXpm"
        fi
  	CPPFLAGS=$SAVED_CFLAGS
  else
	AC_DEFINE(HAVE_XPM)
	XPM_CFLAGS=
  fi
fi
AC_SUBST(XPM_CFLAGS)

if test "$with_jpeg" = no; then
  have_jpeg=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$jpeg_includes" != NO; then
	JPEG_CFLAGS="-I$jpeg_includes"
	CPPFLAGS="$CPPFLAGS $JPEG_CFLAGS"
  fi
  AC_CHECK_HEADER(jpeglib.h,[AC_DEFINE(HAVE_JPEG) AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -ljpeg"])
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(JPEG_CFLAGS)

if test "$with_png" = no; then
  have_png=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$png_includes" != NO; then
	PNG_CFLAGS="-I$png_includes"
	CPPFLAGS="$CPPFLAGS $PNG_CFLAGS"
  fi
  have_png=no
  AC_CHECK_HEADER(png.h,have_png=yes)
  if test "$have_png" = yes; then
        AC_MSG_CHECKING(for png_get_sRGB in png.h)
        AC_EGREP_HEADER(png_get_sRGB,png.h,,have_png=no)
        AC_MSG_RESULT($have_png)
  fi
  if test "$have_png" = yes; then
        AC_DEFINE(HAVE_PNG)
        AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lpng"
        image_format="png"
  fi
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(PNG_CFLAGS)

dnl# Test for libungif first :
if test "$with_gif$with_ungif" = nono; then
  have_gif=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$gif_includes" != NO; then
	GIF_CFLAGS="-I$gif_includes"
	CPPFLAGS="$CPPFLAGS $GIF_CFLAGS"
  fi
  AC_CHECK_HEADER(gif_lib.h,have_gif=yes)
  CPPFLAGS=$SAVED_CFLAGS
  if test "x$have_gif" = "xyes"; then
	AC_DEFINE(HAVE_GIF)
	if test "$with_gif" = no; then
		AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lungif"
	else
		AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lgif"
	fi
  fi
fi
AC_SUBST(GIF_CFLAGS)

dnl# Test for libtiff :

if test "$with_tiff" = no; then
  have_tiff=disabled
else
  SAVED_CFLAGS=$CPPFLAGS
  if test "$tiff_includes" != NO; then
	TIFF_CFLAGS="-I$tiff_includes"
	CPPFLAGS="$CPPFLAGS $TIFF_CFLAGS"
  fi
  AC_CHECK_HEADER(tiffio.h,[AC_DEFINE(HAVE_TIFF) AFTERIMAGE_LIBS="-ltiff $AFTERIMAGE_LIBS" have_tiff=yes])
  CPPFLAGS=$SAVED_CFLAGS
fi
AC_SUBST(TIFF_CFLAGS)

if test "$have_tiff" = yes -o "$have_png" = yes ; then
  AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lz"
fi

dnl# we always need libm since we now call exp() in gaussian blur
AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lm"

dnl# check for libfreetype

AC_CHECK_HEADERS(ft2build.h)

TTF_INCLUDES=

if test "x$with_ttf" = "xNO"; then
  have_ttf=disabled
else
  if test "$ttf_includes" = NO; then
    AC_MSG_CHECKING(headers required by TTF support)
    if freetype-config --cflags >/dev/null  ;then
	  present_incs="$CCFLAGS $x_includes";
	  for l in `freetype-config --cflags` ;	do
	    inc_found=no
	    for p in `echo "$present_incs"` ; do
		if test "x$l" = "x$p" ; then
    		    inc_found=yes;
		fi;
		if test "x$l" = "x-I$p" ; then
    		    inc_found=yes;
		fi;
	    done;
	    if test "x$inc_found" != "xyes" ; then
		TTF_INCLUDES="$TTF_INCLUDES $l" ;
	    fi;
	  done;
	  AC_MSG_RESULT($TTF_INCLUDES)
	  saved_CPPFLAGS=$CPPFLAGS
	  saved_CFLAGS=$CFLAGS
	  CPPFLAGS="$TTF_INCLUDES $CPPFLAGS"
	  CFLAGS="$CFLAGS $TTF_INCLUDES $XPM_CFLAGS $JPEG_CFLAGS $PNG_CFLAGS $GIF_CFLAGS $TIFF_CFLAGS $X_CFLAGS"
	  AC_MSG_CHECKING( freetype/freetype.h )
	  have_ttf=no
          have_freetype_freetype=no
	  have_freetype=no
	  AC_EGREP_HEADER(FT_Face,freetype/freetype.h,
	                  [have_freetype_freetype=yes],
	                  [AC_MSG_RESULT(no);AC_MSG_CHECKING(freetype.h); \
                                             AC_EGREP_HEADER(FT_Face,freetype.h,
					                   [have_freetype=yes], AC_MSG_RESULT(no))]
					  )
    	  if test "x$have_freetype_freetype" = "xyes" ; then
		AC_TRY_RUN([#include <freetype/freetype.h>
                            int main(){FT_Face f; return 0;}],
	                   [AC_DEFINE(HAVE_FREETYPE_FREETYPE) have_ttf=yes],AC_MSG_RESULT(no))
	  elif test "x$have_freetype" = "xyes" ; then
		AC_TRY_RUN([#include <freetype.h>
                            int main(){FT_Face f; return 0;}],
	                   [have_ttf=yes],AC_MSG_RESULT(no))
	  fi;
    	  if test "x$have_ttf" = "xyes" ; then
		AC_DEFINE(HAVE_FREETYPE)
                AC_MSG_RESULT(yes)
	  fi;
	  CPPFLAGS=$saved_CPPFLAGS
	  CFLAGS=$saved_CFLAGS
    else
		enable_ttf=no ;
		AC_MSG_RESULT(none found, ttf disabled)
		echo "You have to install FreeType libary in order to be able to use TTF fonts."
        have_ttf=no
    fi;
  else
	TTF_INCLUDES=$ttf_includes
	AC_DEFINE(HAVE_FREETYPE)
    have_ttf=yes
  fi
  if test "$have_ttf" = yes; then
	  AFTERIMAGE_LIBS="`freetype-config --libs` $AFTERIMAGE_LIBS"
  fi
fi;
AC_SUBST(TTF_INCLUDES)

AFTERIMAGE_LIBS_EXTERNAL=$AFTERIMAGE_LIBS
AC_SUBST(AFTERIMAGE_LIBS_EXTERNAL)

AFTERBASE_CFLAGS=
APPS_AFTERBASE_CFLAGS=
AC_MSG_CHECKING(libAfterBase headers)
if test "$with_afterbase" != "no"; then
  have_afterbase=yes
  if test "$afterbase_includes" = NO; then
	  if test -r "../libAfterBase/astypes.h"; then
		AFTERBASE_CFLAGS="-I.."
	  else
 	    AC_CHECK_HEADER(libAfterBase/astypes.h,,[have_afterbase=no])
	  fi
  else
	  AFTERBASE_CFLAGS="-I$afterbase_includes"
	  APPS_AFTERBASE_CFLAGS="-I$afterbase_includes"
  fi
fi

AFTERBASE_C=afterbase.o
HAVE_AFTERBASE_FLAG=0
if test "x$have_afterbase" = "xyes"; then
    HAVE_AFTERBASE_FLAG=1
	AFTERBASE_C=
    if test "x$have_x" != "xyes" -a "x$have_gif" = "xyes"; then
    	AFTERIMAGE_LIBS="$AFTERIMAGE_LIBS -lAfterBase"
    else
    	AFTERIMAGE_LIBS="-lAfterBase $AFTERIMAGE_LIBS"
    fi
    AFTERIMAGE_APPS_LIBS="-L../ -L../../libAfterBase -lAfterImage $AFTERIMAGE_LIBS"
    AC_DEFINE(HAVE_AFTERBASE)
	AC_MSG_RESULT($AFTERBASE_CFLAGS)
else
	AFTERIMAGE_APPS_LIBS="-L../ -lAfterImage $AFTERIMAGE_LIBS_EXTERNAL"
	if test "$with_afterbase" = "no"; then
	    AC_MSG_RESULT(disabled)
	else
	    AC_MSG_RESULT(none found)
	fi
fi
AC_SUBST(HAVE_AFTERBASE_FLAG)
AC_SUBST(AFTERBASE_CFLAGS)
AC_SUBST(APPS_AFTERBASE_CFLAGS)
AC_SUBST(AFTERBASE_C)
AC_SUBST(have_afterbase)
AC_SUBST(AFTERIMAGE_APPS_LIBS)

dnl# finalizing libs listing :

CLEAN_AFTERIMAGE_LIBS=
for L in $AFTERIMAGE_LIBS; do
  if test "$L" != "-L$libdir"; then
	  CLEAN_AFTERIMAGE_LIBS="$CLEAN_AFTERIMAGE_LIBS $L"
  fi
done
AFTERIMAGE_LIBS="-L$libdir -lAfterImage $CLEAN_AFTERIMAGE_LIBS"
AC_SUBST(AFTERIMAGE_LIBS)

if test "x$enable_staticlibs" = "xyes"; then
   LIBPROG='$(LIB_STATIC)'
   LIBINSTALL="install.static"
fi
if test "x$enable_sharedlibs" = "xyes"; then
   tmp='$(LIB_SHARED)'
   LIBPROG="$LIBPROG $tmp"
   LIBINSTALL="$LIBINSTALL install.dyn"
fi

dnl# define X_LOCALE.  need Linux, NetBSD and etc.
if test "x$enable_xlocale" = "xyes"; then
  DEFINE_XLOCALE="-DX_LOCALE"
fi

dnl# Translate enable_* from "yes/no" to "1/0" (for configure.h)

if test "x$enable_i18n" = "xyes"; then AC_DEFINE(I18N) fi
if test "x$enable_audit" = "xyes"; then AC_DEFINE(DEBUG_ALLOCS) fi

dnl# Variable strings declaration

AC_SUBST(image_format)

AC_SUBST(CFLAGS)
AC_SUBST(version)
AC_SUBST(version_major)
AC_SUBST(lib_name)
AC_SUBST(lib_file_name)
AC_SUBST(with_locale)
AC_SUBST(x_libs)
AC_SUBST(X_CFLAGS)
AC_SUBST(LIBPROG)
AC_SUBST(LIBINSTALL)
AC_SUBST(DEFINE_XLOCALE)
AC_SUBST(sgmltools)
AC_SUBST(PERL)

dnl# Write results

dnl# AC_CONFIG_HEADER(config.h)

dnl# Common parts of the Makefile

LIBAFTERIMAGEFILES=.shared
AC_SUBST_FILE(LIBAFTERIMAGEFILES)

AC_OUTPUT(Makefile \
afterbase.h \
afterimage-libs \
apps/Makefile)

chmod 755 afterimage-libs
cp config.h apps/
